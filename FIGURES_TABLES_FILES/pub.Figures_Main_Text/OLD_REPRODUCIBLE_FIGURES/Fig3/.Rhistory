20-0.2-3-0.3+1.7
20-0.2-3-0.3+1.7
18.2/20
0.15*3
20-0.1-0.6-1.45-0.2+2.5
0.15*3
20-0.9-3-1.45-1.5+0.5
20-0.9-3-1.45-1.45+0.5
20-0.9-3-1.45-1.5+0.5
20-0.1-4.6-0.45+0.7
0.75+0.3
20-0.3-2-1.05-2.0
20-0.4-3-0.3-0.3
20-0.4-3-0.3-0.6
0.5+0.7
1+0.3+0.75
20-1.2-3-2.05-1.5
20-1.2-3-2.05-1.5
20-3.5-0.45
20-0.5-2-1.0+1.1
0.2+0.5+0.1+0.1
0.15*4
0.3+0.625
20-0.9-0.6-0.95-0.1-0.5+0.925
0.3+0.45+0.5
20-0.9-0.6-1.25-0.1-0.5+0.925
20-0.9-0.6-1.25-0.1-0.5
20-0.9-0.6-1.25-0.1-0.5+0.925
20-3.6-0.45-0.5
20-0.6-0.65-0.2-
0
20-2.6-0.650.2
20-2.6-0.65-0.2
0.15*6
20-0.7-4.6-2.9-0.5-2.0+0.5
20-0.1-2.6-0.4
0.3+0.1+0.2+0.2
20-0.8-3.6-1.0+0.5
0.3+0.625
20-0.3-3.6-1.5-0.2+0.925
20-0.5-4.6-0.45-0.1+1.0
20-0.5-3.6-0.4-0.2-2.5
20-0.1-3.6-0.4-0.2-2.5
15/20
20-2.6-0.55-0
20-2.6-0.55
76.82/20
16.85/20
20-3.6
20-0.3-3.6-0.9-0.3
14.9/20
14.9+2
16.9/20
20-0.3-3.6-0.9-0.2
20-0.5
20-0.5-1.6-0.2-0.1-0.1+0.1
20-0.5-1.6-0.2-0.1-0.1+0.1
20-0.8-3.6-1.6-0.9+0.1
20-0.3-2.1-0.2-0.1
20-0.8-3.6-0.2-0
20-0.7-2.5-0.4-0.1-0.2
exam3.curve
library(tidyverse)
library(data.table)
library(magrittr)
ex3 <- fread("/Users/jcnunez/Library/CloudStorage/GoogleDrive-joaquin.c.b.nunez@gmail.com/My\ Drive/Nunez\ Lab/Teaching/BIOL1305_EvoBio/grades/2023/exam3.curve.txt")
ex3 %<>%
mutate(base_grade_2 = case_when(
Exam_2 <= 20*0.60 ~ "F",
Exam_2 >= 20*0.60 & Exam_2 < 20*0.699 ~ "D",
Exam_2 >= 20*0.699 & Exam_2 < 20*0.799 ~ "C",
Exam_2 >= 20*0.799 & Exam_2 < 20*0.899 ~ "B",
Exam_2 >= 20*0.899  ~ "A",
))
ex3 <- fread("/Users/jcnunez/Library/CloudStorage/GoogleDrive-joaquin.c.b.nunez@gmail.com/My\ Drive/Nunez\ Lab/Teaching/BIOL1305_EvoBio/grades/2023/exam3.curve.txt")
ex3 %<>%
mutate(base_grade_3 = case_when(
Exam_2 <= 20*0.60 ~ "F",
Exam_2 >= 20*0.60 & Exam_2 < 20*0.699 ~ "D",
Exam_2 >= 20*0.699 & Exam_2 < 20*0.799 ~ "C",
Exam_2 >= 20*0.799 & Exam_2 < 20*0.899 ~ "B",
Exam_2 >= 20*0.899  ~ "A",
))
ex3 %>%
ggplot(aes(
x=Exam_3,
fill = base_grade_3,
)) + geom_histogram(color = "white") +
geom_vline(xintercept = quantile(ex2$Exam_2, 0.5, na.rm = T)) +
ggtitle("w/o Curve", subtitle = "raw scores")
ex3 <- fread("/Users/jcnunez/Library/CloudStorage/GoogleDrive-joaquin.c.b.nunez@gmail.com/My\ Drive/Nunez\ Lab/Teaching/BIOL1305_EvoBio/grades/2023/exam3.curve.txt")
ex3 %<>%
mutate(base_grade_3 = case_when(
Exam_2 <= 20*0.60 ~ "F",
Exam_2 >= 20*0.60 & Exam_3 < 20*0.699 ~ "D",
Exam_2 >= 20*0.699 & Exam_3 < 20*0.799 ~ "C",
Exam_2 >= 20*0.799 & Exam_3 < 20*0.899 ~ "B",
Exam_2 >= 20*0.899  ~ "A",
))
ex3 %>%
ggplot(aes(
x=Exam_3,
fill = base_grade_3,
)) + geom_histogram(color = "white") +
geom_vline(xintercept = quantile(ex3$Exam_3, 0.5, na.rm = T)) +
ggtitle("w/o Curve", subtitle = "raw scores")
ex2$base_grade_3 %>% table()
ex3$base_grade_3 %>% table()
ex3$base_grade_3 %>% table() %>% prop.table() %>% barplot()
ex3$base_grade_3 %>% table() %>% prop.table()*100
ggplot(
data = ex2,
aes(
x=Exam_1,
y=Exam_3
)) +
geom_smooth(method = "lm") +
geom_abline(slope=1) +
geom_point(size = 5)
ggplot(
data = ex3,
aes(
x=Exam_1,
y=Exam_3
)) +
geom_smooth(method = "lm") +
geom_abline(slope=1) +
geom_point(size = 5)
quantile(ex3$Exam_3, 0.5, na.rm = T) -> reparametrize
reparametrize
20*0.80 -> goal
goal
mean(ex3$Exam_3,  na.rm = T) -> reparametrize
reparametrize
quantile(ex3$Exam_3, 0.5, na.rm = T) -> reparametrize
quantile(ex3$Exam_3, 0.5, na.rm = T) -> reparametrize
20*0.85 -> goal
goal
abs(goal-reparametrize)
quantile(ex3$Exam_3, 0.5, na.rm = T) -> reparametrize
20*0.85 -> goal
ex2 %<>%
mutate(curve_add = abs(goal-reparametrize)) %>%
mutate(Exam2_curved = Exam_2+curve_add) %>%
mutate(curved_grade = case_when(
Exam2_curved <= 20*0.60 ~ "F",
Exam2_curved >= 20*0.60 & Exam2_curved < 20*0.699 ~ "D",
Exam2_curved >= 20*0.699 & Exam2_curved < 20*0.799 ~ "C",
Exam2_curved >= 20*0.799 & Exam2_curved < 20*0.899 ~ "B",
Exam2_curved >= 20*0.899  ~ "A",
))
quantile(ex3$Exam_3, 0.5, na.rm = T) -> reparametrize
20*0.85 -> goal
ex3 %<>%
mutate(curve_add = abs(goal-reparametrize)) %>%
mutate(Exam3_curved = Exam_3+curve_add) %>%
mutate(curved_grade = case_when(
Exam3_curved <= 20*0.60 ~ "F",
Exam3_curved >= 20*0.60 & Exam3_curved < 20*0.699 ~ "D",
Exam3_curved >= 20*0.699 & Exam3_curved < 20*0.799 ~ "C",
Exam3_curved >= 20*0.799 & Exam3_curved < 20*0.899 ~ "B",
Exam3_curved >= 20*0.899  ~ "A",
))
ex2 %>%
ggplot(aes(
x=Exam3_curved,
fill = curved_grade,
)) + geom_histogram(color = "white") +
geom_vline(xintercept = quantile(ex3$Exam_3, 0.5, na.rm = T), color = "red") +
geom_vline(xintercept = quantile(ex3$Exam_3_curved, 0.5, na.rm = T), color = "blue") +
ggtitle("with Curve", subtitle = "Corrected scores")
ex3 %>%
ggplot(aes(
x=Exam3_curved,
fill = curved_grade,
)) + geom_histogram(color = "white") +
geom_vline(xintercept = quantile(ex3$Exam_3, 0.5, na.rm = T), color = "red") +
geom_vline(xintercept = quantile(ex3$Exam_3_curved, 0.5, na.rm = T), color = "blue") +
ggtitle("with Curve", subtitle = "Corrected scores")
ex2$curved_grade %>% table() %>% prop.table() %>% barplot()
ex3$curved_grade %>% table() %>% prop.table() %>% barplot()
ex3$curved_grade %>% table() %>% prop.table()*100
abs(goal-reparametrize)
17/20
37.11+17.55
37.11+17.55+9.00
37.11+17.55+9.00+1.5+1.5+1.5
37.11+17.55+9.00+1.5+1.5+1.5+3
50.85+16.5
50.85+16.5+4
50.85+16.5+4
50.85+16.5+4+3
81.38+17.1
81.38+17.1+4
1131947+394000
1131947+394000
69+16
rm(list = ls())
### libraries
library(data.table)
library(foreach)
library(doMC)
setwd("/Users/jcnunez/Library/CloudStorage/OneDrive-UniversityofVermont/Documents/GitHub/Cville-Seasonality-2016-2019/FIGURES_TABLES_FILES/pub.Figures_Main_Text/OLD_REPRODUCIBLE_FIGURES/Fig3")
load("./dat.for.panel3A.Rdata")
ggplot() +
geom_rect(data = final.windows.pos,
aes(xmin=start/1e6, xmax = end/1e6,
ymin = -110, ymax = 110),
alpha = 0.7, fill = "gold") +
geom_line(
data=dat.for.plot,
aes(
x=pos_mean/1e6,
y=uci.mod,
color = paste(perm_type, metric)
), alpha = 0.5
) +
geom_hline(yintercept = 0, linetype = "dashed") +
ylim(-115,110) +
scale_color_manual(values = c("grey50", "grey50", "blue", "purple")) +
theme_bw() +
theme(legend.position = "none") +
xlab("Genomic Position (Mb)") +
ylab("Transformed P-value") +
xlim(0,20.5) +
geom_vline(xintercept = 2225744/1e6) +
geom_vline(xintercept = 13154180/1e6) ->
panel.for.fig3
library(tidyverse)
ggplot() +
geom_rect(data = final.windows.pos,
aes(xmin=start/1e6, xmax = end/1e6,
ymin = -110, ymax = 110),
alpha = 0.7, fill = "gold") +
geom_line(
data=dat.for.plot,
aes(
x=pos_mean/1e6,
y=uci.mod,
color = paste(perm_type, metric)
), alpha = 0.5
) +
geom_hline(yintercept = 0, linetype = "dashed") +
ylim(-115,110) +
scale_color_manual(values = c("grey50", "grey50", "blue", "purple")) +
theme_bw() +
theme(legend.position = "none") +
xlab("Genomic Position (Mb)") +
ylab("Transformed P-value") +
xlim(0,20.5) +
geom_vline(xintercept = 2225744/1e6) +
geom_vline(xintercept = 13154180/1e6) ->
panel.for.fig3
panel.for.fig3
load("./dat.for.3b.Rdata")
ggplot() +
geom_vline(data=inv.dt[which(inv.dt$invName == "2Lt")], aes(xintercept=start/1e6), linetype="solid") +
geom_vline(data=inv.dt[which(inv.dt$invName == "2Lt")], aes(xintercept=stop/1e6), linetype="solid") +
geom_rect(data = final.windows.pos,
aes(xmin=start/1e6, xmax = end/1e6,
ymin = -0, ymax = 0.01),
alpha = 0.7, fill = "gold") +
geom_line(
data=sub_pi_d_parsed.plot,
aes(
x=BIN_START/1e6,
y=value,
color = type),
alpha = 0.9) +
theme_bw() +
theme(legend.position = "none") +
xlim(0,20.5) +
facet_wrap(~variable, ncol = 1, scales = "free_y") ->
pi_d_plot_all
pi_d_plot_all
rm(list = ls())
library(data.table)
library(tidyverse)
library(magrittr)
library(foreach)
library(doMC)
####  create window objects
final.windows.pos =
data.frame(win.name = c("left", "win_3.1", "win_4.7", "win_5.1", "win_6.1", "win_6.8", "win_9.6", "right" ),
mid = c(2.2, 3.0, 4.67, 5.12, 6.2, 6.8 , 9.6, 13.1),
chr = "2L"
) %>%
mutate(start = (mid-0.2)*1e6 ,
end  = (mid+0.2)*1e6  )
### load thermal GLM object
sets <- data.table(mod=c(1:11),
start=c(0,  0,  0,  7, 15, 30, 60, 15, 45,  0,  0),
end=	 c(7, 15, 30, 15, 30, 60, 90, 45, 75, 60, 90))
####### PLot
load("./window.enrich.set.Rdata")
setwd("/Users/jcnunez/Library/CloudStorage/OneDrive-UniversityofVermont/Documents/GitHub/Cville-Seasonality-2016-2019/FIGURES_TABLES_FILES/pub.Figures_Main_Text/OLD_REPRODUCIBLE_FIGURES/Fig4")
#####
#####
#####
#####
setwd("/Users/jcnunez/Library/CloudStorage/OneDrive-UniversityofVermont/Documents/GitHub/Cville-Seasonality-2016-2019/FIGURES_TABLES_FILES/pub.Figures_Main_Text/OLD_REPRODUCIBLE_FIGURES/Fig3")
load("./dat.for.panel3A.Rdata")
ggplot() +
geom_rect(data = final.windows.pos,
aes(xmin=start/1e6, xmax = end/1e6,
ymin = -110, ymax = 110),
alpha = 0.7, fill = "gold") +
geom_line(
data=dat.for.plot,
aes(
x=pos_mean/1e6,
y=uci.mod,
color = paste(perm_type, metric)
), alpha = 0.5
) +
geom_hline(yintercept = 0, linetype = "dashed") +
ylim(-115,110) +
scale_color_manual(values = c("grey50", "grey50", "blue", "purple")) +
theme_bw() +
theme(legend.position = "none") +
xlab("Genomic Position (Mb)") +
ylab("Transformed P-value") +
xlim(0,20.5) +
geom_vline(xintercept = 2225744/1e6) +
geom_vline(xintercept = 13154180/1e6) ->
panel.for.fig3
panel.for.fig3
ggsave(panel.for.fig3, file = "panel.for.fig3.pdf", w = 7, h = 3)
#####
#####
#####
#####
##### Panel B
#####
#####
#####
#save(sub_pi_d_parsed.plot, inv.dt, final.windows.pos, file = "dat.for.3b.Rdata")
load("./dat.for.3b.Rdata")
ggplot() +
geom_vline(data=inv.dt[which(inv.dt$invName == "2Lt")], aes(xintercept=start/1e6), linetype="solid") +
geom_vline(data=inv.dt[which(inv.dt$invName == "2Lt")], aes(xintercept=stop/1e6), linetype="solid") +
geom_rect(data = final.windows.pos,
aes(xmin=start/1e6, xmax = end/1e6,
ymin = -0, ymax = 0.01),
alpha = 0.7, fill = "gold") +
geom_line(
data=sub_pi_d_parsed.plot,
aes(
x=BIN_START/1e6,
y=value,
color = type),
alpha = 0.9) +
theme_bw() +
theme(legend.position = "none") +
xlim(0,20.5) +
facet_wrap(~variable, ncol = 1, scales = "free_y") ->
pi_d_plot_all
ggsave(pi_d_plot_all, file = "pi_d_plot_all.pdf", w = 7, h = 3.5)
#### Panel C
### Panel 3C
###
load("FST.data.fig.Rdata")
fst.dat.for.Fig3 %>%
mutate(mid = (BIN_START+BIN_END)/2) %>%
melt(id= c("CHROM", "mid", "BIN_START", "BIN_END", "N_VARIANTS", "samp",  "WS")) %>%
filter(variable == "WEIGHTED_FST") %>%
ggplot(aes(
x=mid,
y=value,
color = samp,
linetype = variable
)) +
#geom_vline(xintercept = 5192177 , linetype = "solid", color = "blue") +
geom_vline(xintercept = 2225744, linetype = "dashed") +
geom_vline(xintercept = 13154180, linetype = "dashed") +
geom_line(size = 1.0, alpha = 0.9) +
#facet_grid(WS~samp) +
xlim(0, 21e6) +
ggtitle("Weighted FST") +
theme_bw()
#### Figure D
###
load("./haplowins_pt1.Rdata")
###
rownames(windws_snp_matrix_clean) = windws_snp_matrix_clean$samp_id
analyses_types = list(
all=c("left",
"win_3.1",
"win_4.7",
"win_5.1",
"win_6.1",
"win_6.6",
"win_9.6",
"right") #,
#win3.1=c("win_3.1"),
#win5.1=c("win_5.1"),
#win9.6=c("win_9.6")
)
foreach(i=1:length(analyses_types))%do%{
message(names(analyses_types)[i])
analysis = names(analyses_types)[i]
target_snps <- filter(sim_polarity, win %in% as.character(analyses_types[[i]]) )$SNP_id
data_in <- windws_snp_matrix_clean[, which(colnames(windws_snp_matrix_clean) %in% target_snps)  ]
actual_sel_snps <- colnames(data_in)
# dplyr::select(windws_snp_matrix_clean, !(samp_id), filter(SNP_guide_metadata, window == "win5" )$SNP_id )
D_all <- dist( data_in )
tre_all <- njs(D_all)
tree_all_plot <- ggtree(tre_all, ignore.negative.edge=TRUE) +
#geom_tiplab(size=2, align=TRUE, linesize=.5) +
theme_tree2()
tree_all_plot <- tree_all_plot %<+% joint_figure_polarized_missingdat_clean + geom_tippoint(aes(color=pop))
is_tip <- tre_all$edge[,2] <= length(tre_all$tip.label)
ordered_tips <- tre_all$edge[is_tip, 2]
tre_all$tip.label[ordered_tips]  -> tree_order
joint_figure_polarized_missingdat_clean %>%
#filter(samp_id %in% select_haps$samp[grep("line", select_haps$samp,  invert = T)] ) %>%
mutate(samp_id_fct = factor(samp_id, levels = tree_order)) %>%
.[complete.cases(.$samp_id_fct),] %>%
ggplot(
aes(
x=as.factor(loci_id),
y=samp_id_fct,
fill = polarity
)
) + geom_tile(size = 0.1) +
facet_grid(.~win, scales = "free", space = "free"
#ncol = 1, shrink = F
) +
ggtitle(analysis) +
theme_bw() +
scale_fill_brewer(palette = "Set1") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())  ->
karyo_plot_joint_all
karyo_plot_joint_all %>%
insert_left(tree_all_plot, width = 0.1)  -> hap_tree_plots_all
ggsave(hap_tree_plots_all, file = paste(analysis, "hap_tree_plots.all.pdf", sep = "."), h = 6, w = 10)
}
Cville_haplotags_for_viz %>%
ggplot(aes(
x=yday,
y=Mean_haplotag,
#ymin=ci_l,
#ymax=ci_h,
color=(temp.max),
)) +
#geom_smooth(method = "lm", se = F, size = 0.8, color = "grey") +
#geom_errorbar(width = 0.1) +
scale_color_gradient2(low="steelblue", high = "firebrick2", mid = "gold1",
midpoint = 25) +
geom_point(aes(shape=as.factor(year))) +
geom_smooth( se = F, size = 0.8, color = "black", linetype = "dashed") +
ylim(0,0.38) +
theme_bw() +
facet_grid(win~.)->
haplo.time.colortemp.ave
load("DatFor.Haplotypes.trajectory.time.weather.Rdata")
Cville_haplotags_for_viz %>%
ggplot(aes(
x=yday,
y=Mean_haplotag,
#ymin=ci_l,
#ymax=ci_h,
color=(temp.max),
)) +
#geom_smooth(method = "lm", se = F, size = 0.8, color = "grey") +
#geom_errorbar(width = 0.1) +
scale_color_gradient2(low="steelblue", high = "firebrick2", mid = "gold1",
midpoint = 25) +
geom_point(aes(shape=as.factor(year))) +
geom_smooth( se = F, size = 0.8, color = "black", linetype = "dashed") +
ylim(0,0.38) +
theme_bw() +
facet_grid(win~.)->
haplo.time.colortemp.ave
haplo.time.colortemp.ave
haplo.time.colortemp.ave
Cville_haplotags_for_viz %>%
melt(id = c("sampleId",
"collectionDate",
"set",
"year",
"win",
"yday",
"Mean_haplotag")) %>%
filter(variable == "temp.max") %>%
ggplot(aes(
x=value,
y=Mean_haplotag
)) +
geom_point(color = "grey",aes(shape=as.factor(year))) +
geom_smooth(method = "lm",
color = "black") +
theme_bw() +
facet_grid(win~., scales = "free_x") ->
eco.vars.afs
eco.vars.afs
54.66+9
54.66+9+4
74+9
74+9+2.4+4
74+9+3+4
74.17+4
74.17+4+1.0+1.2
84.49+3+4
84.49+3+4+0.75
86.49+3+4
44.97+4
44.97+4+15
