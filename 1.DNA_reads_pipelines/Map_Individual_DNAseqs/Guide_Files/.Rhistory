geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 5, shape =23, fill = "red") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
D_qtls+PI_qtls
D_qtls = ggMarginal(D_qtls, type="histogram")
D_qtls
PI_qtls
D_qtls+PI_qtls
library(patchwork)
D_qtls+PI_qtls
D_qtls+PI_qtls
library(patchwork)
D_qtls
PI_qtls
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)/501), y=(as.numeric(Derived)/501)),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 5, shape =23, fill = "red") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)/501), y=(as.numeric(Derived)/501)),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=as.numeric(Ancestral)/501, y=as.numeric(Derived)/501),
size = 5, shape =23, fill = "red") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)/5010), y=(as.numeric(Derived)/5010)),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=as.numeric(Ancestral)/5010, y=as.numeric(Derived)/5010),
size = 5, shape =23, fill = "red") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)/50.1), y=(as.numeric(Derived)/50.1)),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=as.numeric(Ancestral)/50.1, y=as.numeric(Derived)/50.1),
size = 5, shape =23, fill = "red") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 5, shape =23, fill = "red") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
Pi_dcast_dat_qtl
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 5, shape =23, fill = "red") +
coord_trans(x="log10", y="log10") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 5, shape =23, fill = "red") +
coord_trans(x="log10", y="log10")
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=log10(as.numeric(Ancestral)), y=log10(as.numeric(Derived))),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=log10(as.numeric(Ancestral)), y=log10(as.numeric(Derived))),
size = 5, shape =23, fill = "red")  -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
dat_qtl
dat_qtl %>% .$V4
dat_qtl %>% .$V4 %>% unique
dat_qtl %>%
.[which(.$V2 %in% c("Tajima.D")),] %>%
dcast(V2+V4~V1, value.var = "V3")  -> D_dcast_dat_qtl
ggplot() +
geom_jitter(data =D_dcast_dat ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =D_dcast_dat_qtl  ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 5, shape =23, fill = "red") -> D_qtls
D_qtls = ggMarginal(D_qtls, type="histogram")
D_qtls
dat_qtl %>%
.[which(.$V2 %in% c("Tajima.D")),] %>%
dcast(V2+V4~V1, value.var = "V3")  -> D_dcast_dat_qtl
D_dcast_dat_qtl
dat_qtl
dat_qtl %>%
.[which(.$V2 %in% c("Tajima.D")),] %>%
dcast(V2+V4~V1, value.var = "V3")
dat_qtl %>%
.[which(.$V2 %in% c("Tajima.D")),]
dat_qtl$V2
dat %>%
.[which(.$V2 %in% c("Fu.Li.D")),] %>%
dcast(V2+V4~V1, value.var = "V3") %>%
.[complete.cases(.),] -> D_dcast_dat
dat_qtl %>%
.[which(.$V2 %in% c("Fu.Li.D")),] %>%
dcast(V2+V4~V1, value.var = "V3")  -> D_dcast_dat_qtl
ggplot() +
geom_jitter(data =D_dcast_dat ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =D_dcast_dat_qtl  ,
aes(x=as.numeric(Ancestral), y=as.numeric(Derived)),
size = 5, shape =23, fill = "red") -> D_qtls
D_qtls = ggMarginal(D_qtls, type="histogram")
D_qtls
dat_qtl %>% group_by(V2)
dat_qtl %>% group_by(V2) %>% summarise(N-n())
dat_qtl %>% group_by(V2) %>% summarise(N=n())
28/2
dat_qtl %>%
.[which(.$V2 %in% c("Pi")),] %>%
dcast(V2+V4~V1, value.var = "V3")  -> Pi_dcast_dat_qtl
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 5, shape =23, fill = "red")  -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
Pi_dcast_dat_qtl
dat_qtl %>%
.[which(.$V2 %in% c("Pi")),] %>%
dcast(V2+V4~V1, value.var = "V3")  -> Pi_dcast_dat_qtl
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 5, shape =23, fill = "red")  +
xlab("Pi Ancestral Haplotyples") +
ylab("Pi Derived Haplotypes") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
ggplot() +
geom_jitter(data =PI_dcast_dat ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 3, shape =21, fill = "grey")  +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_point(data =Pi_dcast_dat_qtl ,
aes(x=(as.numeric(Ancestral)), y=(as.numeric(Derived))),
size = 5, shape =23, fill = "red")  +
xlab("π Ancestral Haplotyples") +
ylab("π Derived Haplotypes") -> PI_qtls
PI_qtls = ggMarginal(PI_qtls, type="histogram")
PI_qtls
Pi_dcast_dat
Pi_dcast_dat %>% summarise()
Pi_dcast_dat$Ancestral %>% mean
Pi_dcast_dat$Derived %>% mean
Pi_dcast_dat$Ancestral %>% mean(na.rm = T)
Pi_dcast_dat$Derived %>% mean(na.rm = T)
Pi_dcast_dat$Ancestral
Pi_dcast_dat[,c("Ancestral","Derived")] = lapply(Pi_dcast_dat[,c("Ancestral","Derived")], as.numeric)
Pi_dcast_dat$Ancestral %>% mean(na.rm = T)
Pi_dcast_dat$Derived %>% mean(na.rm = T)
Pi_dcast_dat$Ancestral %>% quantile(0.95)
Pi_dcast_dat_qtl
Pi_dcast_dat$Derived %>% quantile(0.95)
fst_dat_m
library(forcats)
peaks_mrk
5198221-100000
5198221-50000
5198221-20000
5198221-15000
5198221-18000
all_mapping_pairs <- read.delim("~/Dropbox/2021_Cville_DEST/Alyssa's Single Ind/Mapping_pairs/all_mapping_pairs.txt", header=FALSE)
View(all_mapping_pairs)
all_mapping_pairs
names(all_mapping_pairs) = c("File1","File2")
all_mapping_pairs %>% head
library(tidyverse)
all_mapping_pairs %>% head
library(magrittr)
all_mapping_pairs %<>%
separate(File1,
remove = F,
into = c("lane","sample"),
sep = "_1_") %>% head
all_mapping_pairs <- read.delim("~/Dropbox/2021_Cville_DEST/Alyssa's Single Ind/Mapping_pairs/all_mapping_pairs.txt", header=FALSE)
names(all_mapping_pairs) = c("File1","File2")
all_mapping_pairs %>%
separate(File1,
remove = F,
into = c("lane","sample"),
sep = "_1_") %>% head
all_mapping_pairs %>%
separate(File1,
remove = F,
into = c("lane_1","sample_1"),
sep = "_1_") %>%
separate(File2,
remove = F,
into = c("lane_2","sample_2"),
sep = "_2_") %>% head
all_mapping_pairs %<>%
separate(File1,
remove = F,
into = c("lane_1","sample_1"),
sep = "_1_") %>%
separate(File2,
remove = F,
into = c("lane_2","sample_2"),
sep = "_2_")
all_mapping_pairs
all_mapping_pairs %>% View
all_mapping_pairs$sample_1 %>% table
data.frame(
table(all_mapping_pairs$sample_1)
table(all_mapping_pairs$sample_2)
)
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
)
table(all_mapping_pairs$sample_1)
table(all_mapping_pairs$sample_2)
all_mapping_pairs %<>%
separate(File1,
remove = F,
into = c("lane_1","sample_1"),
sep = "_1_") %>%
separate(File2,
remove = F,
into = c("lane_2","sample_2"),
sep = "_2_")
all_mapping_pairs
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
)
table(all_mapping_pairs$sample_2)
all_mapping_pairs$sample_2
all_mapping_pairs$sample_2 %>% View
all_mapping_pairs <- read.delim("~/Dropbox/2021_Cville_DEST/Alyssa's Single Ind/Mapping_pairs/all_mapping_pairs.txt", header=FALSE)
names(all_mapping_pairs) = c("File1","File2")
all_mapping_pairs %<>%
separate(File1,
remove = F,
into = c("lane_1","sample_1"),
sep = "_1_") %>%
separate(File2,
remove = F,
into = c("lane_2","sample_2"),
sep = "_2_")
table(all_mapping_pairs$sample_2) %>% View
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
)
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
) %>%
mutate(LOGIC_NAME = ifelse(Var1 == Var2, "yes","no"),
LOGIC_NUMBER = ifelse(Freq == Freq.1, "yes8","no8")
)
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
)
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
) %>%
mutate(LOGIC_NAME = ifelse(Var1 == Var1.1, "yes","no"),
LOGIC_NUMBER = ifelse(Freq == Freq.1, "yes8","no8")
)
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
) %>%
mutate(LOGIC_NAME = ifelse(Var1 == Var1.1, "yes","no"),
LOGIC_NUMBER = ifelse(Freq == Freq.1, "yes8","no8")
) -> logic_comparison_inds
logic_comparison_inds %>% View
logic_comparison_inds
write.table(all_mapping_pairs,
file = "Alyssa_ind_reads_guideFile.txt",
row.names = F,
col.names = F,
quote = F
)
write.table(logic_comparison_inds,
file = "Alyssa_ind_logic_comparison_inds.txt",
row.names = F,
col.names = F,
quote = F
)
setwd("~/Dropbox/2021_Cville_DEST/Alyssa's Single Ind/Mapping_pairs/")
write.table(all_mapping_pairs,
file = "Alyssa_ind_reads_guideFile.txt",
row.names = F,
col.names = F,
quote = F
)
write.table(logic_comparison_inds,
file = "Alyssa_ind_logic_comparison_inds.txt",
row.names = F,
col.names = F,
quote = F
)
all_mapping_pairs
all_mapping_pairs %<>%
separate(File1,
remove = F,
into = c("lane_1","sample_1"),
sep = "_1_") %>%
separate(File2,
remove = F,
into = c("lane_2","sample_2"),
sep = "_2_") %>%
mutate(Merged_name = gsub(".fastq.gz", "", paste(lane_1, sample_1, sep = "_")) )
all_mapping_pairs
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
) %>%
mutate(LOGIC_NAME = ifelse(Var1 == Var1.1, "yes","no"),
LOGIC_NUMBER = ifelse(Freq == Freq.1, "yes8","no8")
) -> logic_comparison_inds
### Save files
write.table(all_mapping_pairs,
file = "Alyssa_ind_reads_guideFile.txt",
row.names = F,
col.names = F,
quote = F
)
write.table(logic_comparison_inds,
file = "Alyssa_ind_logic_comparison_inds.txt",
row.names = F,
col.names = F,
quote = F
)
all_mapping_pairs %>% View
all_mapping_pairs %>% names
write.table(all_mapping_pairs,
file = "Alyssa_ind_reads_guideFile.txt",
row.names = F,
col.names = F,
quote = F,
sep = "\t"
)
write.table(logic_comparison_inds,
file = "Alyssa_ind_logic_comparison_inds.txt",
row.names = F,
col.names = F,
quote = F,
sep = "\t"
)
all_mapping_pairs %>% head
all_mapping_pairs
?grep
all_mapping_pairs %>%
separate(File1,
remove = F,
into = c("lane_1","sample_1"),
sep = "_1_") %>%
separate(File2,
remove = F,
into = c("lane_2","sample_2"),
sep = "_2_") %>%
mutate(Merged_name = gsub(".fastq.gz", "", paste(lane_1, sample_1, sep = "_"))) %>%
separate(sample_2, into = c("sample_name","etc"), sep = "\\_") %>% head
all_mapping_pairs %>%
separate(File1,
remove = F,
into = c("lane_1","sample_1"),
sep = "_1_") %>%
separate(File2,
remove = F,
into = c("lane_2","sample_2"),
sep = "_2_") %>%
mutate(Merged_name = gsub(".fastq.gz", "", paste(lane_1, sample_1, sep = "_"))) %>%
separate(sample_2, remove = F, into = c("sample_name","etc"), sep = "\\_") %>% head
all_mapping_pairs %<>%
separate(File1,
remove = F,
into = c("lane_1","sample_1"),
sep = "_1_") %>%
separate(File2,
remove = F,
into = c("lane_2","sample_2"),
sep = "_2_") %>%
mutate(Merged_name = gsub(".fastq.gz", "", paste(lane_1, sample_1, sep = "_"))) %>%
separate(sample_2, remove = F, into = c("sample_name","SL_extension"), sep = "\\_")
all_mapping_pairs %>% head
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
) %>%
mutate(LOGIC_NAME = ifelse(Var1 == Var1.1, "yes","no"),
LOGIC_NUMBER = ifelse(Freq == Freq.1, "yes8","no8")
) -> logic_comparison_inds
GoodSamps_list <- read.table("~/Dropbox/2021_Cville_DEST/Alyssa's Single Ind/Mapping_pairs/GoodSamps_list.txt", quote="\"", comment.char="")
View(GoodSamps_list)
names(GoodSamps_list) = "goodsamps"
GoodSamps_list
all_mapping_pairs %>% head
#Generate logical file
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
) %>%
mutate(LOGIC_NAME = ifelse(Var1 == Var1.1, "yes","no"),
LOGIC_NUMBER = ifelse(Freq == Freq.1, "yes8","no8")
) -> logic_comparison_inds
all_mapping_pairs
all_mapping_pairs %>%
.[which(.$sample_name %in% GoodSamps_list$goodsamps),]
all_mapping_pairs =
all_mapping_pairs %>%
.[which(.$sample_name %in% GoodSamps_list$goodsamps),]
all_mapping_pairs
data.frame(
table(all_mapping_pairs$sample_1),
table(all_mapping_pairs$sample_2)
) %>%
mutate(LOGIC_NAME = ifelse(Var1 == Var1.1, "yes","no"),
LOGIC_NUMBER = ifelse(Freq == Freq.1, "yes8","no8")
) -> logic_comparison_inds
logic_comparison_inds
all_mapping_pairs
all_mapping_pairs %>% head(3)
### Save files
write.table(all_mapping_pairs,
file = "Alyssa_ind_reads_guideFile.txt",
row.names = F,
col.names = F,
quote = F,
sep = "\t"
)
write.table(logic_comparison_inds,
file = "Alyssa_ind_logic_comparison_inds.txt",
row.names = F,
col.names = F,
quote = F,
sep = "\t"
)
119 * 8
library(tidyverse)
library(reshape2)
library(magrittr)
samples_to_phase <- read.delim("~/Dropbox/2021_Cville_DEST/Alyssa's Single Ind/Guide_Files/samples_to_phase.txt", header=FALSE)
samples_to_phase %<>%
mutate(`2L` = "chr",
`2R` = "chr",
`3L` = "chr",
`3R` = "chr",
`X` = "chr",
) %>%
melt(id = c("V1","V2"))
write.table(samples_to_phase[,c("V1","V2","variable")],
sep = "\t",
row.names = F,
col.names = F,
quote = F,
file = "~/Dropbox/2021_Cville_DEST/Alyssa's Single Ind/Guide_Files/samples_to_phase_chr.txt")
