runif(1, 0, 9)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 1, 0.5)
sample(1:9, 2)
sample(1:9, 2)
sample(1:9, 2)
sample(1:9, 2)
sample(1:9, 2)
sample(1:9, 2)
sample(1:2, 1)
5+7
reps = 0:100
length(reps)
1000000
1000000/315
1000000/56
1228*2
3400+2450
10000/3
10000/3
5000/3
7300/3
13633+6869+36226
?rbind
rbind(count_by_Inv, count_by_Consequence_Inv  fill = T)
?do.call
rbind(count_by_Inv, count_by_Consequence_Inv)
Errich_list= list()
?save
file = paste(pop, "enrrich_count.Rdata", sep ="")
?ggsave
library(tidyverse)
??ggsave
?ggsave
ggplot() +
geom_violin(data=counts_df[which(counts_df$category == "Per"),],
aes(x=chr,
y=proportion),
color = "springgreen") +
geom_point(data=counts_df[which(counts_df$category == "Obs"),],
aes(x=chr,
y=proportion),
size = 4,
color = "firebrick") +
facet_grid(~pop) ->
p_tresh_plot
ggsave(p_tresh_plot,
file = "p_tresh_plot.pdf",
width = 8,
height = 4)
?dcast
??dcast
library(reshape2)
?dcast
enrr_Inv %>%
group_by(chr, inversion_pos, category) %>%
summarise(Nobs = median(N)) %>%
dcast(chr~inversion_pos+category, fill = T)
tmp_matrix[1,1] =  enrr_Inv_cast[1,1+1]
tmp_matrix[1,2] =  enrr_Inv_cast[1,3+1]
tmp_matrix[2,1] = enrr_Inv_cast[1,2+1]
tmp_matrix[2,2] = enrr_Inv_cast[1,4+1]
fet_tmp <- fisher.test(tmp_matrix)
tmp_matrix <-
matrix(rep(NA, 4),
nrow = 2,
dimnames = list( c("Obs", "Perm"),
c("Feature", "Not_Feature") ) )
tmp_inv = data.frame(
type = "inv",
chr = enrr_Inv_cast[i, "chr"],
pop = enrr_Inv_cast[i, "pop"]
)
enrr_Consq %>%
group_by(chr, inversion_pos, category, pop, Consequence) %>%
summarise(Nobs = median(N)) %>%
dcast(chr+pop+inversion_pos+Consequence~category,
fill = 0,
value.var = "Nobs") %>%
.[complete.cases(.),]->
enrr_Consq_cast
?t.test
counts_df
?qnatile
?quantile
ecdf
ecdf(DatProp)
rbind_obj <-  bind_rows(genome_counts, chromosome_counts, chromosome_inv_counts)
###  ###  ###  ###  ###  ###  ###  ###  ###  ###  ###  ###  ###  ###  ###  ###  ###
### Enrrichment analysis
### Firt merge with annotation object
filtered_glm.out_f %>%
left_join(annotation_dmel_sp) ->
filtered_glm.out_f_annot
glm.out_f %>%
group_by(chr, CRM_pos, inversion_pos) %>%
summarise(N=n()) -> all_snps_chr_CRM_INV
?write.table
View(tmp_matrix)
?system
counts_df %<>%
mutate(fill_for_plot = paste(inversion_pos,CRM_pos, sep = ""))
?select
counts_df %>%
.[complete.cases(.),] %>%
as.data.frame() %>%
select(chr,
Consequence = CRM_pos,
inversion_pos,
N = Tresh,
p_tresh,
category,
pop) %>% head
?select
ggplot() +
geom_violin(data=dat_in[which(dat_in$category == "Per"),],
aes(x=chr,
y=proportion,
fill = fill_for_plot),
alpha = 0.7
) +
geom_point(data=dat_in[which(dat_in$category == "Obs"),],
aes(x=chr,
y=proportion,
fill = fill_for_plot),
size = 2.3,
shape = 23,
color = "black",
position = position_dodge2(w = 0.95)) +
facet_grid(~pop, scales = "free_x", space = "free") +
ylab(expression( paste("%SNPs", italic(P<0.05)) ) ) +
theme_bw() +
theme(legend.position = "top")->
p_tresh_plot
ggsave(p_tresh_plot,
file = "p_tresh_plot.pdf",
width = 9,
height = 2.5)
