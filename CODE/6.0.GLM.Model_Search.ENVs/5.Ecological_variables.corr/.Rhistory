theme_bw() +
geom_line(size = 1.2, color = "grey")
D.inv
D.inv <- read.delim("~/Downloads/D.CM.W_100000.S_50000.INV.Tajima.D")
D.std <- read.delim("~/Downloads/D.CM.W_100000.S_50000.STD.Tajima.D")
library(tidyverse)
library(magrittr)
D.inv <- read.delim("~/Downloads/D.CM.W_100000.S_50000.INV.Tajima.D")
D.inv %<>% mutate(set = "inv")
D.std <- read.delim("~/Downloads/D.CM.W_100000.S_50000.STD.Tajima.D")
D.std %<>% mutate(set = "std")
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_vline(xintercept = 2225744) +
geom_vline(xintercept = 13154180) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "#L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 3336032, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "3L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 3336032, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_vline(xintercept = 2225744) +
geom_vline(xintercept = 13154180) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
xlim(7e6,8e6) +
geom_line(size = 1.1)
library(tidyverse)
library(magrittr)
library(data.table)
library(foreach)
root <- paste(base, paste("data3", metric, sep = "."), sep = "/")
root <- paste(base, paste("data3", metric, sep = "."), sep = "/")
library(data.table)
library(tidyverse)
library(magrittr)
library(reshape2)
library(foreach)
## load
choice.dat <- fread("/Users/jcbnunez/Downloads/Final_Project_Fly_Count.tsv")
library(tidyverse)
a = c( rep(6970, 13), rep(317, 2) )
1/mean(1/a)
a = c( rep(25000, 13), rep(2500, 2) )
1/mean(1/a)
a = c( rep(25000, 13), rep(1500, 2) )
1/mean(1/a)
rm(list = ls())
library(tidyverse)
library(magrittr)
library(factoextra)
library(FactoMineR)
library(gtools)
library(patchwork)
library(ggalt)
slice_n
?slice_n
?slice_
slice_
library(vcfR)
library(adegenet)
library(tidyverse)
library(vroom)
slice_mutation_of_interst.stus %>%
filter(loci %in% c(0,2)) %>%
group_by(loci) %>%
slice_head(n=9)
glm.snps$SNP_id[i]
0.05/3
0.05/5
pw <-dcast(pl[pos==5192177][variable%in%target$pheno], ral_id+gt~variable, value.var="x_norm")
20*4
5*4
library(vroom)
fst <- vroom("/Users/jcbnunez/Downloads/FST.W_10000.S_5000.DPGP3.windowed.weir.fst")
fst
fst %>% tail
library(tidyverse)
fst %>% tail
fst
fst %>% ggplot(aes(x = BIN_START, y = WEIGHTED_FST))  +geom_line()
vroom
vcf.r = vroom("/project/berglandlab/jcbnunez/emergency_scratch/dpgp3/vcfs_o/ZI104_Chr2L.seq.named.fasta.vcf")
?vroom
vcf.r = vroom("/project/berglandlab/jcbnunez/emergency_scratch/dpgp3/vcfs_o/ZI104_Chr2L.seq.named.fasta.vcf", delim = "\t", comment = "##")
vcf.r %>%
mutate(samp.tmp = case_when(ALT == "N" ~ "./.",
ALT == REF ~ "0/0",
REF != ALT ~ "1/1",
)) ->
vcf.r.fix
file.o=as.character(args[1])
fst <- vroom("/Users/jcbnunez/Downloads/FST.W_500000.S_100000.DPGP3.windowed.weir.fst")
fst
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2
y=WEIGHTED_FST
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= WEIGHTED_FST
)
) +  geom_line()
fst <- vroom("/Users/jcbnunez/Downloads/FST.W_10000.S_5000.DPGP3.windowed.weir.fst")
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= WEIGHTED_FST
)
) +  geom_line()
fst <- vroom("/Users/jcbnunez/Downloads/FST.W_100000.S_50000.DPGP3.windowed.weir.fst")
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= WEIGHTED_FST
)
) +  geom_line()
fst
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= MEAN_FST
)
) +  geom_line()
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= WEIGHTED_FST
)
) +  geom_line()
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2/1e6,
y= WEIGHTED_FST
)
) +  geom_line() +
geom_vline(xintercept = 2225744/1e6) +
geom_vline(xintercept = 13154180/1e6)
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2/1e6,
y= WEIGHTED_FST
)
) +
geom_vline(xintercept = 2225744/1e6, color = "red") +
geom_vline(xintercept = 13154180/1e6, color = "red") +
geom_line()
5192177
5192177+10000
5192177-10000
vcftools \
data.frame(
line.Line= row.names(x.dpgp.tab),
tsp=x.dpgp.tab[,"5192177_SNP"]) -> tsp.dat.dpgp
68000+22000
13154180-2225744
68/9
7500
7500
7500
7500*9
7500
7500*3
52*2
7500*2
15000*3
36090+30000
66090*0.50
load("/Users/jcbnunez/Downloads/Best.GLM.models.output.Rdata")
ls()
glm.best.models
glm.best.models %>%
filter(chr == "2L") %>%
filter(pos == 5192177)
library(tidyverse)
glm.best.models %>%
filter(chr == "2L") %>%
filter(pos == 5192177)
glm.best.models %>%
filter(chr == "2L") %>%
filter(pos == 5192177) %>%
.$Description
glm.best.models %>%
filter(chr == "2L") %>%
filter(pos == 5192177) %>%
.$Description %>%
str_split(., ",")
View(glm.best.models)
glm.best.models
glm.best.models %>%
filter(chr == "2L") %>%
filter(pos == 5192177) %>%
filter(cluster == "5.Cville") %>%
.$Description %>%
str_split(., ",")
68*0.03
raise_calc = function(base, k){
to = base*0.03
for(i in 1:k){
base = base+to
to = base*0.03
return(base+to)
}
}
raise_calc(68,1)
raise_calc = function(base, k){
to = 0
for(i in 1:k){
base = base+to
to = base*0.03
return(base+to)
}
}
raise_calc(68,1)
raise_calc(68,3)
raise_calc(68,4)
raise_calc = function(base, k){
to = 0
for(i in 1:k){
base = base+to
tb = base*0.03
print(i)
return(base+tb)
}
}
raise_calc(68,4)
1:k
k=4
1:k
for (i in 1:10) {
print(i)
}
raise_calc = function(base, k){
to = 0
for(i in 1:k){
base = base+to
tb = base*0.03
print(i)
return(base+tb)
}
}
raise_calc(1,2)
raise_calc = function(base, k){
for (i in 1:k) {
print(i)
}
raise_calc(1,10)
raise_calc = function(base, k){
for (i in 1:k) {
print(i)
}
}
raise_calc(1,10)
raise_calc = function(base, k){
for (i in 1:k) {
print(i)
print(base + k )
}
}
raise_calc(1,10)
raise_calc = function(base, k){
for (i in 1:k) {
print(i)
base = base + base*0.03
print(base )
}
}
raise_calc(1,10)
raise_calc = function(base, k){
for (i in 1:k) {
base = base + base*0.03
print(paste(base, i ))
}
}
raise_calc(10,10)
raise_calc = function(base, k){
for (i in 1:k) {
base = base + base*0.03
print(paste(round(base, 2), i ))
}
}
raise_calc(10,10)
raise_calc = function(base, k){
for (i in 1:k) {
base = base + base*0.03
print(paste( "$", round(base, 2), "year=" , i ))
}
}
raise_calc(68,10)
raise_calc(68,6)
raise_calc(68,3)
raise_calc = function(base, k){
for (i in 1:k) {
base = base + base*0.03
print(paste( "$", round(base+base*0.25, 2), "year=" , i ))
}
}
raise_calc(68,3)
raise_calc = function(base, k){
for (i in 1:k) {
base = base + base*0.03
print(paste( "$", round(base+(base/9)*3, 2), "year=" , i ))
}
}
raise_calc(68,3)
raise_calc(66,3)
raise_calc = function(base, k){
for (i in 1:k) {
print(paste( "$", round(base+(base/9)*3, 2), "year=" , 0 ))
base = base + base*0.03
print(paste( "$", round(base+(base/9)*3, 2), "year=" , i ))
}
}
raise_calc(66,3)
raise_calc = function(base, k){
for (i in 1:k) {
print(paste( "$", round(base+(base/9)*3, 2), "year=" , 0 ))
base = base + base*0.03
print(paste( "$", round(base+(base/9)*3, 2), "year=" , i ))
}
}
raise_calc(68,3)
raise_calc = function(base, k){
print(paste( "$", round(base+(base/9)*3, 2), "year=" , 0 ))
for (i in 1:k) {
base = base + base*0.03
print(paste( "$", round(base+(base/9)*3, 2), "year=" , i ))
}
}
raise_calc(68,3)
1336.76-1400
raise_calc(68,3)
setwd("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/REPRODUCIBLE_FIGURES/Fig5")
##
library(tidyverse)
library(magrittr)
library(data.table)
library(gmodels)
library(vroom)
inv.tb <- vroom("InversionsMap_hglft_v6_inv_startStop.txt")
names(inv.tb)[1] = "chr"
### For Panel A
load("./out_count.Rdata")
### For pannel B
load("./co.enrich.files.Rdata")
## For panel C
dt.window =  get(load("./sliding.windowholm.Rdata"))
pheno <- readRDS("./wideform.fixed.phenotable.RDS")
### For panel D and E
pc_loading = readRDS("pca_pheno.data")
pcr.ag = readRDS("pca_loadings.data")
pca.info = load("pc.object.Rdata")
#### For Panels F/G
load(file = "deficiency.line.Rdata")
load(file = "phenotype.dt.Rdata")
#lim <- 1.8
p3 = ggplot(data=pc_loading) +
#coord_equal() +
geom_segment(aes(x=0, y=0, xend=Dim.1, yend=Dim.2), size=0.1, arrow=arrow(length=unit(0.05,"cm"))) +
geom_text(data=pc_loading[Dim.1<0], aes(x=x, y=y, label=pheno), size = 1.0, vjust=1, hjust=1) +
geom_text(data=pc_loading[Dim.1>0], aes(x=x, y=y, label=pheno), size = 1.0, vjust=1, hjust=0) +
geom_segment(aes(x=x, y=y, xend=Dim.1, yend=Dim.2), color="grey", alpha=0.5, size = 0.4) +
xlim(-2.5,2.5) + ylim(-1.8,1.8) +
theme(legend.position = "none") +
theme_bw() + xlab("PCA Dimension 1 Loadings (8.7%)") + ylab("PCA Dimension 2 Loadings (7.8%)")
pc_loading %>%
filter(Dim.1 < 0) %>%
select(pheno)
pc_loading %>%
filter(Dim.1 > 0) %>%
select(pheno)
p1 <- ggplot(data=pcr.ag, aes(x=as.factor(gt.name), y=mu1)) +
geom_errorbar(aes(x=as.factor(gt.name), ymin=mu1-1.96*se1, ymax=mu1+1.96*se1), width=.1) +
geom_point() +
theme_bw()  +
xlab(NULL) +
#coord_fixed() +
ylab("PCA 1 Projection")
p2 <- ggplot(data=pcr.ag, aes(x=as.factor(gt.name), y=mu2)) +
geom_errorbar(aes(x=as.factor(gt.name), ymin=mu2-1.96*se2, ymax=mu2+1.96*se2), width=.1) +
geom_point() +
theme_bw() +
xlab(NULL) +
#coord_fixed() +
ylab("PCA 2 Projection")
p3+(p1/p2)  +
plot_layout(guides = 'collect') -> panelD
#lim <- 1.8
p3 = ggplot(data=pc_loading) +
#coord_equal() +
geom_segment(aes(x=0, y=0, xend=Dim.1, yend=Dim.2), size=0.1, arrow=arrow(length=unit(0.05,"cm"))) +
geom_text(data=pc_loading[Dim.1<0], aes(x=x, y=y, label=pheno), size = 1.0, vjust=1, hjust=1) +
geom_text(data=pc_loading[Dim.1>0], aes(x=x, y=y, label=pheno), size = 1.0, vjust=1, hjust=0) +
geom_segment(aes(x=x, y=y, xend=Dim.1, yend=Dim.2), color="grey", alpha=0.5, size = 0.4) +
xlim(-2.5,2.5) + ylim(-1.8,1.8) +
theme(legend.position = "none") +
theme_bw() + xlab("PCA Dimension 1 Loadings (8.7%)") + ylab("PCA Dimension 2 Loadings (7.8%)")
pc_loading %>%
filter(Dim.1 < 0) %>%
select(pheno)
pc_loading %>%
filter(Dim.1 > 0) %>%
select(pheno)
p1 <- ggplot(data=pcr.ag, aes(x=as.factor(gt.name), y=mu1)) +
geom_errorbar(aes(x=as.factor(gt.name), ymin=mu1-1.96*se1, ymax=mu1+1.96*se1), width=.1) +
geom_point() +
theme_bw()  +
xlab(NULL) +
#coord_fixed() +
ylab("PCA 1 Projection")
p1
p2 <- ggplot(data=pcr.ag, aes(x=as.factor(gt.name), y=mu2)) +
geom_errorbar(aes(x=as.factor(gt.name), ymin=mu2-1.96*se2, ymax=mu2+1.96*se2), width=.1) +
geom_point() +
theme_bw() +
xlab(NULL) +
#coord_fixed() +
ylab("PCA 2 Projection")
p2
p1
pcr.ag
pc_loading
pcr.ag
37/5
37/7
5*5+0.6+2
setwd("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/6.0.GLM.Model_Search.ENVs/5.Ecological_variables.corr/")
getwd()
library(tidyverse)
library(magrittr)
library(data.table)
library(car)
library(DescTools)
library(foreach)
library(doMC)
library(patchwork)
library(ggbeeswarm)
load("./nasa_power.weather.mod.Rdata")
names(weather.ave)[1] = "sampleId"
sets <- data.table(mod=c(1:11),
start=c(0,  0,  0,  7, 15, 30, 60, 15, 45,  0,  0),
end=	 c(7, 15, 30, 15, 30, 60, 90, 45, 75, 60, 90))
