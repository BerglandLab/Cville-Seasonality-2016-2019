ggplot(aes(
x=BIN_START,
y=TajimaD
)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_line(size = 1.2) +
q
D.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_line(size = 1.2)
D.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, lintype = "dashed") +
geom_hline(yintercept = -1, lintype = "dashed") +
geom_line(size = 1.2)
D.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.2)
D.std <- read.delim("~/Downloads/D.CM.W_100000.S_50000.STD.Tajima.D")
D.std %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.2)
D.std %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.2, color = "grey")
D.inv
D.inv <- read.delim("~/Downloads/D.CM.W_100000.S_50000.INV.Tajima.D")
D.std <- read.delim("~/Downloads/D.CM.W_100000.S_50000.STD.Tajima.D")
library(tidyverse)
library(magrittr)
D.inv <- read.delim("~/Downloads/D.CM.W_100000.S_50000.INV.Tajima.D")
D.inv %<>% mutate(set = "inv")
D.std <- read.delim("~/Downloads/D.CM.W_100000.S_50000.STD.Tajima.D")
D.std %<>% mutate(set = "std")
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_vline(xintercept = 2225744) +
geom_vline(xintercept = 13154180) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "#L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 3336032, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "3L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 3336032, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_vline(xintercept = 2225744) +
geom_vline(xintercept = 13154180) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
xlim(7e6,8e6) +
geom_line(size = 1.1)
library(tidyverse)
library(magrittr)
library(data.table)
library(foreach)
root <- paste(base, paste("data3", metric, sep = "."), sep = "/")
root <- paste(base, paste("data3", metric, sep = "."), sep = "/")
library(data.table)
library(tidyverse)
library(magrittr)
library(reshape2)
library(foreach)
## load
choice.dat <- fread("/Users/jcbnunez/Downloads/Final_Project_Fly_Count.tsv")
library(tidyverse)
a = c( rep(6970, 13), rep(317, 2) )
1/mean(1/a)
a = c( rep(25000, 13), rep(2500, 2) )
1/mean(1/a)
a = c( rep(25000, 13), rep(1500, 2) )
1/mean(1/a)
rm(list = ls())
library(tidyverse)
library(magrittr)
library(factoextra)
library(FactoMineR)
library(gtools)
library(patchwork)
library(ggalt)
slice_n
?slice_n
?slice_
slice_
library(vcfR)
library(adegenet)
library(tidyverse)
library(vroom)
slice_mutation_of_interst.stus %>%
filter(loci %in% c(0,2)) %>%
group_by(loci) %>%
slice_head(n=9)
glm.snps$SNP_id[i]
0.05/3
0.05/5
pw <-dcast(pl[pos==5192177][variable%in%target$pheno], ral_id+gt~variable, value.var="x_norm")
20*4
5*4
library(vroom)
fst <- vroom("/Users/jcbnunez/Downloads/FST.W_10000.S_5000.DPGP3.windowed.weir.fst")
fst
fst %>% tail
library(tidyverse)
fst %>% tail
fst
fst %>% ggplot(aes(x = BIN_START, y = WEIGHTED_FST))  +geom_line()
vroom
vcf.r = vroom("/project/berglandlab/jcbnunez/emergency_scratch/dpgp3/vcfs_o/ZI104_Chr2L.seq.named.fasta.vcf")
?vroom
vcf.r = vroom("/project/berglandlab/jcbnunez/emergency_scratch/dpgp3/vcfs_o/ZI104_Chr2L.seq.named.fasta.vcf", delim = "\t", comment = "##")
vcf.r %>%
mutate(samp.tmp = case_when(ALT == "N" ~ "./.",
ALT == REF ~ "0/0",
REF != ALT ~ "1/1",
)) ->
vcf.r.fix
file.o=as.character(args[1])
fst <- vroom("/Users/jcbnunez/Downloads/FST.W_500000.S_100000.DPGP3.windowed.weir.fst")
fst
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2
y=WEIGHTED_FST
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= WEIGHTED_FST
)
) +  geom_line()
fst <- vroom("/Users/jcbnunez/Downloads/FST.W_10000.S_5000.DPGP3.windowed.weir.fst")
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= WEIGHTED_FST
)
) +  geom_line()
fst <- vroom("/Users/jcbnunez/Downloads/FST.W_100000.S_50000.DPGP3.windowed.weir.fst")
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= WEIGHTED_FST
)
) +  geom_line()
fst
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= MEAN_FST
)
) +  geom_line()
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2,
y= WEIGHTED_FST
)
) +  geom_line()
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2/1e6,
y= WEIGHTED_FST
)
) +  geom_line() +
geom_vline(xintercept = 2225744/1e6) +
geom_vline(xintercept = 13154180/1e6)
fst %>%
ggplot(
aes(
x= c(BIN_START+BIN_END)/2/1e6,
y= WEIGHTED_FST
)
) +
geom_vline(xintercept = 2225744/1e6, color = "red") +
geom_vline(xintercept = 13154180/1e6, color = "red") +
geom_line()
5192177
5192177+10000
5192177-10000
vcftools \
data.frame(
line.Line= row.names(x.dpgp.tab),
tsp=x.dpgp.tab[,"5192177_SNP"]) -> tsp.dat.dpgp
26.6+24.3
222-7
213+7
setwd("~/Documents/G'")
setwd("~/Documents/GitHub/Cville-Seasonality-2016-2019/")
setwd("./REPRODUCIBLE_FIGURES/Fig5/")
library(tidyverse)
library(magrittr)
library(data.table)
library(gmodels)
library(vroom)
inv.tb <- vroom("InversionsMap_hglft_v6_inv_startStop.txt")
names(inv.tb)[1] = "chr"
### For Panel A
load("./out_count.Rdata")
### For pannel B
load("./co.enrich.files.Rdata")
## For panel C
dt.window =  get(load("./sliding.windowholm.Rdata"))
pheno <- readRDS("./wideform.fixed.phenotable.RDS")
### For panel D and E
pc_loading = readRDS("pca_pheno.data")
pcr.ag = readRDS("pca_loadings.data")
pca.info = load("pc.object.Rdata")
#### For Panels F/G
load(file = "deficiency.line.Rdata")
load(file = "phenotype.dt.Rdata")
setwd("./SuppAnalysis/")
###Inversion paper figure
library(data.table)
library(tidyverse)
library(foreach)
library(doParallel)
library(corrplot)
library(patchwork)
library(ggrepel)
#install.packages('doParallel', repos='http://cran.us.r-project.org')
load("figuredataOctober.Rdata")
getwd()
library(data.table)
library(tidyverse)
library(foreach)
library(doParallel)
library(ggrepel)
library(gmodels)
library(lme4)
library(emmeans)
longstartle = readRDS("def.longstartle")
model.data = readRDS("modelingwithgeno.RDS")
group.colors <- c(inverted.derived = "steelblue", standard.ancestral = "red", inverted.ancestral = "blue")
g1 = longstartle[phenotypes == "sr.length"] %>%
group_by(geno, f1.background,  phenotypes,knockout,# inversion.st
) %>%
summarise(mean = ci(value)[1],
uci = ci(value)[2],
lci = ci(value)[3]
) %>%
ggplot(aes(
x=f1.background,
y=mean,
ymin=lci,
ymax=uci,
color =  geno
)) +
xlab("Gene Deficiency Status") +
ylab("Startle Duration") +
scale_color_manual(values = group.colors) +
geom_errorbar(width = 0.1, position=position_dodge(width = 0.5), show.legend = F) +
geom_point(position=position_dodge(width = 0.5), show.legend = F) +
facet_grid(.~knockout, scales = "free_y")+
theme_bw() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank()
)
#create graph for basal activity
g2 =
longstartle[phenotypes == "basal.act.min"] %>%
group_by(geno, f1.background,  phenotypes,knockout,# inversion.st
) %>%
summarise(mean = ci(value)[1],
uci = ci(value)[2],
lci = ci(value)[3]
) %>%
ggplot(aes(
x=f1.background,
y=mean,
ymin=lci,
ymax=uci,
color =  geno
)) +
scale_color_manual(values = group.colors) +
geom_errorbar(width = 0.1, position=position_dodge(width = 0.5)) +
geom_point(position=position_dodge(width = 0.5)) +
facet_grid(.~knockout, scales = "free_y")+
xlab("Gene Deficiency Status") +
ylab("Basal Activity") +
theme_bw() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
#create graph for modeling
model.data$geno = paste(model.data$geno, model.data$f1.background, sep = "-")
kno = "k9a"
#make pairwise ~ (categorical factor), var = continues covariate
model.em = glmer(formula = (zed.obs ~ scaled.minute * geno  + (1| fly.id) + (1|week)), model.data[knockout == kno])
x = emtrends(model.em, pairwise ~ geno, var = "scaled.minute")#pbkrtest.limit = 6697
load("trends.startle.decay")
em.total = readRDS("trends.startle.decay")
#group.colors <- c(derived = "red", ancestral = "blue")
g3 =
ggplot(em.total, aes(x = f1.background, y = scaled.minute.trend, ymin = asymp.LCL, ymax = asymp.UCL, color = newgeno)) +
geom_errorbar(width = 0.1, position=position_dodge(width = 0.5), show.legend = F) +
geom_point(position=position_dodge(width = 0.5), show.legend = F) +
facet_grid(.~knockout, scales = "free_y")+
theme_bw() +
scale_color_manual(values = group.colors) +
ylab("activity.slope") +
theme (
axis.text.x = element_blank(),
axis.title.x = element_blank()
)
g3/g1/g2
group.colors <- c(inverted.derived = "blue", standard.ancestral = "red", inverted.ancestral = "steelblue3")
g1 = longstartle[phenotypes == "sr.length"] %>%
group_by(geno, f1.background,  phenotypes,knockout,# inversion.st
) %>%
summarise(mean = ci(value)[1],
uci = ci(value)[2],
lci = ci(value)[3]
) %>%
ggplot(aes(
x=f1.background,
y=mean,
ymin=lci,
ymax=uci,
color =  geno
)) +
xlab("Gene Deficiency Status") +
ylab("Startle Duration") +
scale_color_manual(values = group.colors) +
geom_errorbar(width = 0.1, position=position_dodge(width = 0.5), show.legend = F) +
geom_point(position=position_dodge(width = 0.5), show.legend = F) +
facet_grid(.~knockout, scales = "free_y")+
theme_bw() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank(),
axis.text.x = element_blank(),
axis.title.x = element_blank()
)
#create graph for basal activity
g2 =
longstartle[phenotypes == "basal.act.min"] %>%
group_by(geno, f1.background,  phenotypes,knockout,# inversion.st
) %>%
summarise(mean = ci(value)[1],
uci = ci(value)[2],
lci = ci(value)[3]
) %>%
ggplot(aes(
x=f1.background,
y=mean,
ymin=lci,
ymax=uci,
color =  geno
)) +
scale_color_manual(values = group.colors) +
geom_errorbar(width = 0.1, position=position_dodge(width = 0.5)) +
geom_point(position=position_dodge(width = 0.5)) +
facet_grid(.~knockout, scales = "free_y")+
xlab("Gene Deficiency Status") +
ylab("Basal Activity") +
theme_bw() +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)
#create graph for modeling
#try emmmeans
#need to merge f1.background into geno for this part
model.data$geno = paste(model.data$geno, model.data$f1.background, sep = "-")
kno = "k9a"
#make pairwise ~ (categorical factor), var = continues covariate
model.em = glmer(formula = (zed.obs ~ scaled.minute * geno  + (1| fly.id) + (1|week)), model.data[knockout == kno])
x = emtrends(model.em, pairwise ~ geno, var = "scaled.minute")#pbkrtest.limit = 6697
#try emmmeans
#need to merge f1.background into geno for this part
#model.data$geno = paste(model.data$geno, model.data$f1.background, sep = "-")
#kno = "k9a"
#make pairwise ~ (categorical factor), var = continues covariate
#model.em = glmer(formula = (zed.obs ~ scaled.minute * geno  + (1| fly.id) + (1|week)), model.data[knockout == kno])
#x = emtrends(model.em, pairwise ~ geno, var = "scaled.minute")#pbkrtest.limit = 6697
#look for emmeans measure of intercepts.
#emmip(model.em, geno ~ scaled.minute, cov.reduce = range)
#x = x[[1]]
#em.data = as.data.table(x)
#em.data$f1.background = ifelse(grepl("balancer", em.data$geno),"balancer", "deficiency")
#em.data[,newgeno := tstrsplit(geno, "-")[[1]]]
#em.data$knockout = kno
#em.data5 = em.data
#em.total = rbind(em.data1, em.data2, em.data3, em.data4, em.data5)
#saveRDS(em.total, "trends.startle.decay")
em.total = readRDS("trends.startle.decay")
#group.colors <- c(derived = "red", ancestral = "blue")
g3 =
ggplot(em.total, aes(x = f1.background, y = scaled.minute.trend, ymin = asymp.LCL, ymax = asymp.UCL, color = newgeno)) +
geom_errorbar(width = 0.1, position=position_dodge(width = 0.5), show.legend = F) +
geom_point(position=position_dodge(width = 0.5), show.legend = F) +
facet_grid(.~knockout, scales = "free_y")+
theme_bw() +
scale_color_manual(values = group.colors) +
ylab("activity.slope") +
theme (
axis.text.x = element_blank(),
axis.title.x = element_blank()
)
g3/g1/g2
ggsave(g3/g1/g2 , file =  "sr.total.partitioned.pdf", width = 9, height = 5)
746-682
36+63
99/0.6
99*0.6
11+22
33*0.6
99*0.66
2/3
33*0.66
435-221
