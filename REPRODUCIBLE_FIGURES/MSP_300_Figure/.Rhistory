filter(CHROM == "2L") -> fst.2l.dat
fst.2l.dat %>%
arrange(-MEAN_FST)
final.windows.pos =
data.frame(win.name = c("win_3.1", "win_4.7", "win_5.1", "win_6.1", "win_6.8", "win_9.6" ),
mid = c(3.0, 4.67, 5.15, 6.2, 6.8 , 9.6)
) %>%
mutate(start = (mid-0.2)*1e6 ,
end  = (mid+0.2)*1e6  )
ggplot() +
geom_rect(data = final.windows.pos,
aes(xmin=start, xmax = end,
ymin = 0, ymax = 0.7),
alpha = 0.7, fill = "gold") +
geom_line(data= fst.2l.dat, aes(
x=((BIN_START+BIN_END)/2),
y=MEAN_FST,
#color = pop,
#linetype = kar
),  color = "purple", alpha = 0.9) +
#geom_vline(xintercept = (5170001+5180000 )/2, color = "blue" ) +
#geom_vline(xintercept = (5190001+5200000 )/2, color = "red" ) +
scale_color_manual(values = colors) +
ylab(expression(paste(F[ST]))) +
theme_bw() +
xlab("Genomic Position (Mb)") +
xlim(0,20.5*1e6) +
geom_vline(xintercept = 2225744) +
geom_vline(xintercept = 13154180) ->
fst.dat.2l
fst.dat.2l
fst.dgrp1 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/16.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/DGRP.FST.W_100000.S_50000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "DGRP", WS = "W_100000.S_50000")
fst.dgrp1 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/10.0.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/DGRP.FST.W_100000.S_50000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "DGRP", WS = "W_100000.S_50000")
fst.cm1 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/10.0.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/FST.W_100000.S_50000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "CM", WS = "W_100000.S_50000")
fst.dgrp2 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/10.0.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/DGRP.FST.W_500000.S_100000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "DGRP", WS = "W_500000.S_100000")
fst.cm2 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/10.0.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/FST.W_500000.S_100000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "CM", WS = "W_500000.S_100000")
fst.dgrp3 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/10.0.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/DGRP.FST.W_10000.S_5000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "DGRP", WS = "W_10000.S_5000")
fst.cm3 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/10.0.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/FST.W_10000.S_5000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "CM", WS = "W_10000.S_5000")
fst.dgrp4 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/10.0.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/DGRP.FST.W_5000.S_1000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "DGRP", WS = "W_5000.S_1000")
fst.cm4 = vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/CODE/10.0.Haplotypes_TajD_Pi_FST/data/FSTs.2L.dgrp.cm/FST.W_5000.S_1000.INVvsSTD.windowed.weir.fst") %>% mutate(samp = "CM", WS = "W_5000.S_1000")
fst.dgrp1
rbind(fst.dgrp1, fst.cm1, fst.dgrp2, fst.cm2, fst.dgrp3, fst.cm3, fst.dgrp4, fst.cm4) -> fst.dat.merged
fst.dat.merged
fst.dat.merged  %>%
mutate(mid = (BIN_START+BIN_END)/2) %>%
ggplot(aes(
x=mid,
y=MEAN_FST,
color = samp
)) +
#geom_hline(yintercept = 0.6 , linetype = "solid", color = "blue") +
geom_vline(xintercept = 5192177 , linetype = "solid", color = "blue") +
geom_vline(xintercept = 2225744, linetype = "dashed") +
geom_vline(xintercept = 13154180, linetype = "dashed") +
geom_line(size = 1.0, alpha = 0.9) +
facet_grid(WS~samp) +
ggtitle("Unweighted FST") +
ylim(-0.1, 0.70) +
theme_bw() -> meanfst
meanfst
rbind(fst.dgrp1, fst.cm1, fst.dgrp2, fst.cm2, fst.dgrp3, fst.cm3, fst.dgrp4, fst.cm4) %>%
mutate(mid = (BIN_START+BIN_END)/2) %>%
ggplot(aes(
x=mid,
y=WEIGHTED_FST,
color = samp
)) +
#geom_hline(yintercept = 0.6 , linetype = "solid", color = "blue") +
geom_vline(xintercept = 5192177 , linetype = "solid", color = "blue") +
geom_vline(xintercept = 2225744, linetype = "dashed") +
geom_vline(xintercept = 13154180, linetype = "dashed") +
geom_line(size = 1.0, alpha = 0.9) +
facet_grid(WS~samp) +
ggtitle("Weighted FST") +
ylim(-0.1, 0.70) +
theme_bw() -> weightedfst
weightedfst
rbind(fst.dgrp1, fst.cm1) -> fst.dat.for.Fig3
fst.dat.for.Fig3 %>%
mutate(mid = (BIN_START+BIN_END)/2) %>%
melt(id= c("CHROM", "mid", "BIN_START", "BIN_END", "N_VARIANTS", "samp",  "WS")) %>%
filter(variable == "WEIGHTED_FST") %>%
ggplot(aes(
x=mid,
y=value,
color = samp,
linetype = variable
)) +
#geom_vline(xintercept = 5192177 , linetype = "solid", color = "blue") +
geom_vline(xintercept = 2225744, linetype = "dashed") +
geom_vline(xintercept = 13154180, linetype = "dashed") +
geom_line(size = 1.0, alpha = 0.9) +
#facet_grid(WS~samp) +
xlim(0, 21e6) +
ggtitle("Weighted FST") +
theme_bw()
rbind(fst.dgrp1, fst.cm1, fst.dgrp2, fst.cm2, fst.dgrp3, fst.cm3, fst.dgrp4, fst.cm4) -> fst.dat.merged.all
save(fst.dat.for.Fig3, fst.dat.merged.all, file = "FST.data.fig.Rdata" )
getwd()
load("FST.data.fig.Rdata")
fst.dat.for.Fig3 %>%
mutate(mid = (BIN_START+BIN_END)/2) %>%
melt(id= c("CHROM", "mid", "BIN_START", "BIN_END", "N_VARIANTS", "samp",  "WS")) %>%
filter(variable == "WEIGHTED_FST") %>%
ggplot(aes(
x=mid,
y=value,
color = samp,
linetype = variable
)) +
#geom_vline(xintercept = 5192177 , linetype = "solid", color = "blue") +
geom_vline(xintercept = 2225744, linetype = "dashed") +
geom_vline(xintercept = 13154180, linetype = "dashed") +
geom_line(size = 1.0, alpha = 0.9) +
#facet_grid(WS~samp) +
xlim(0, 21e6) +
ggtitle("Weighted FST") +
theme_bw()
### libraries
library(data.table)
library(foreach)
library(doMC)
registerDoMC(4)
library(SeqArray)
library(lubridate)
library(tidyverse)
library(magrittr)
#library(ggVennDiagram)
library(patchwork)
library(data.table)
library(reshape2)
library(doParallel)
library(SNPRelate)
library(SeqArray)
library(vroom)
library(fastglm)
load("./haplowins_pt1.Rdata")
rownames(windws_snp_matrix_clean) = windws_snp_matrix_clean$samp_id
analyses_types = list(
all=c("left",
"win_3.1",
"win_4.7",
"win_5.1",
"win_6.1",
"win_6.6",
"win_9.6",
"right") #,
#win3.1=c("win_3.1"),
#win5.1=c("win_5.1"),
#win9.6=c("win_9.6")
)
foreach(i=1:length(analyses_types))%do%{
message(names(analyses_types)[i])
analysis = names(analyses_types)[i]
target_snps <- filter(sim_polarity, win %in% as.character(analyses_types[[i]]) )$SNP_id
data_in <- windws_snp_matrix_clean[, which(colnames(windws_snp_matrix_clean) %in% target_snps)  ]
actual_sel_snps <- colnames(data_in)
# dplyr::select(windws_snp_matrix_clean, !(samp_id), filter(SNP_guide_metadata, window == "win5" )$SNP_id )
D_all <- dist( data_in )
tre_all <- njs(D_all)
tree_all_plot <- ggtree(tre_all, ignore.negative.edge=TRUE) +
#geom_tiplab(size=2, align=TRUE, linesize=.5) +
theme_tree2()
tree_all_plot <- tree_all_plot %<+% joint_figure_polarized_missingdat_clean + geom_tippoint(aes(color=pop))
is_tip <- tre_all$edge[,2] <= length(tre_all$tip.label)
ordered_tips <- tre_all$edge[is_tip, 2]
tre_all$tip.label[ordered_tips]  -> tree_order
joint_figure_polarized_missingdat_clean %>%
#filter(samp_id %in% select_haps$samp[grep("line", select_haps$samp,  invert = T)] ) %>%
mutate(samp_id_fct = factor(samp_id, levels = tree_order)) %>%
.[complete.cases(.$samp_id_fct),] %>%
ggplot(
aes(
x=as.factor(loci_id),
y=samp_id_fct,
fill = polarity
)
) + geom_tile(size = 0.1) +
facet_grid(.~win, scales = "free", space = "free"
#ncol = 1, shrink = F
) +
ggtitle(analysis) +
theme_bw() +
scale_fill_brewer(palette = "Set1") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())  ->
karyo_plot_joint_all
karyo_plot_joint_all %>%
insert_left(tree_all_plot, width = 0.1)  -> hap_tree_plots_all
ggsave(hap_tree_plots_all, file = paste(analysis, "hap_tree_plots.all.pdf", sep = "."), h = 6, w = 10)
}
??njs
library(ape)
library(reshape2)
library(doParallel)
library(SNPRelate)
library(SeqArray)
library(vroom)
library(patchwork)
library(factoextra)
library(FactoMineR)
library(adegenet)
library(pegas)
library(vcfR)
library(car)
library(DescTools)
library(ape)
library(ggtree)
library(aplot)
library(forcats)
foreach(i=1:length(analyses_types))%do%{
message(names(analyses_types)[i])
analysis = names(analyses_types)[i]
target_snps <- filter(sim_polarity, win %in% as.character(analyses_types[[i]]) )$SNP_id
data_in <- windws_snp_matrix_clean[, which(colnames(windws_snp_matrix_clean) %in% target_snps)  ]
actual_sel_snps <- colnames(data_in)
# dplyr::select(windws_snp_matrix_clean, !(samp_id), filter(SNP_guide_metadata, window == "win5" )$SNP_id )
D_all <- dist( data_in )
tre_all <- njs(D_all)
tree_all_plot <- ggtree(tre_all, ignore.negative.edge=TRUE) +
#geom_tiplab(size=2, align=TRUE, linesize=.5) +
theme_tree2()
tree_all_plot <- tree_all_plot %<+% joint_figure_polarized_missingdat_clean + geom_tippoint(aes(color=pop))
is_tip <- tre_all$edge[,2] <= length(tre_all$tip.label)
ordered_tips <- tre_all$edge[is_tip, 2]
tre_all$tip.label[ordered_tips]  -> tree_order
joint_figure_polarized_missingdat_clean %>%
#filter(samp_id %in% select_haps$samp[grep("line", select_haps$samp,  invert = T)] ) %>%
mutate(samp_id_fct = factor(samp_id, levels = tree_order)) %>%
.[complete.cases(.$samp_id_fct),] %>%
ggplot(
aes(
x=as.factor(loci_id),
y=samp_id_fct,
fill = polarity
)
) + geom_tile(size = 0.1) +
facet_grid(.~win, scales = "free", space = "free"
#ncol = 1, shrink = F
) +
ggtitle(analysis) +
theme_bw() +
scale_fill_brewer(palette = "Set1") +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())  ->
karyo_plot_joint_all
karyo_plot_joint_all %>%
insert_left(tree_all_plot, width = 0.1)  -> hap_tree_plots_all
ggsave(hap_tree_plots_all, file = paste(analysis, "hap_tree_plots.all.pdf", sep = "."), h = 6, w = 10)
}
library(rnaturalearth)
library(rnaturalearthdata)
library(ggExtra)
load("DatFor.Haplotypes.trajectory.time.weather.Rdata")
#####
Cville_haplotags_for_viz %>%
ggplot(aes(
x=yday,
y=Mean_haplotag,
#ymin=ci_l,
#ymax=ci_h,
color=(temp.max),
)) +
#geom_smooth(method = "lm", se = F, size = 0.8, color = "grey") +
#geom_errorbar(width = 0.1) +
scale_color_gradient2(low="steelblue", high = "firebrick2", mid = "gold1",
midpoint = 25) +
geom_point(aes(shape=as.factor(year))) +
geom_smooth( se = F, size = 0.8, color = "black", linetype = "dashed") +
ylim(0,0.38) +
theme_bw() +
facet_grid(win~.)->
haplo.time.colortemp.ave
haplo.time.colortemp.ave
Cville_haplotags_for_viz %>%
melt(id = c("sampleId",
"collectionDate",
"set",
"year",
"win",
"yday",
"Mean_haplotag")) %>%
filter(variable == "temp.max") %>%
ggplot(aes(
x=value,
y=Mean_haplotag
)) +
geom_point(color = "grey",aes(shape=as.factor(year))) +
geom_smooth(method = "lm",
color = "black") +
theme_bw() +
facet_grid(win~., scales = "free_x") ->
eco.vars.afs
eco.vars.afs
setwd("../Fig4/")
rm(list = ls())
library(tidyverse)
library(reshape2)
library(magrittr)
library(foreach)
library(viridis)
library(data.table)
library(ggridges)
library(broom)
library(ade4)
load("./FST.seasonal.Rdata")
fst.dat.EC$SNP.set %>% unique() -> sets
fst.dat.EC %<>%
mutate(delta_y = abs(year1-year2))
fst.dat.EC
fst.dat.EC %>%
mutate(year_diff = abs(year1-year2) ) %>%
mutate(month_diff = abs(month1-month2) ) %>%
ggplot(
aes(x= as.factor(year_diff),
y=FST,
color = SNP.set)
) +
theme_bw() +
scale_color_viridis(discrete = TRUE, option = "D") +
geom_boxplot(outlier.size =  0.5, size = 0.6) +
facet_wrap(~Continental_clusters)->
fst.inv.plot.boxplot
fst.inv.plot.boxplot
rm(list = ls())
library(data.table)
library(tidyverse)
library(magrittr)
library(foreach)
library(doMC)
registerDoMC(4)
library(tidyr)
library(patchwork)
####  create window objects
final.windows.pos =
data.frame(win.name = c("left", "win_3.1", "win_4.7", "win_5.1", "win_6.1", "win_6.8", "win_9.6", "right" ),
mid = c(2.2, 3.0, 4.67, 5.12, 6.2, 6.8 , 9.6, 13.1),
chr = "2L"
) %>%
mutate(start = (mid-0.2)*1e6 ,
end  = (mid+0.2)*1e6  )
### load thermal GLM object
sets <- data.table(mod=c(1:11),
start=c(0,  0,  0,  7, 15, 30, 60, 15, 45,  0,  0),
end=	 c(7, 15, 30, 15, 30, 60, 90, 45, 75, 60, 90))
####### PLot
load("./window.enrich.set.Rdata")
load("./machado.datasets.enrch.Rdata")
rbind(mutate(machado.datasets.enrch, set.type = "Machado"  ),
mutate(enrichment.sets, set.type = "DEST")) %>%
#filter(analysis_type == "best_model") %>%
#separate(anchor.model, into = c("model", "resolution.mod", "demo.region"), sep = ";" ) %>%
mutate(start=win.start,
end=win.end
) %>%      left_join(final.windows.pos) %>%
ggplot(aes(
x=win.name,
y=log2(or),
ymin=log2(lci),
ymax=log2(uci),
color = anchor.model,
fill = anchor.model,
)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_errorbar(size = 0.5, width = 0.25, position=position_dodge(width=0.5)) +
geom_point(size = 2.0, shape = 21, position=position_dodge(width=0.5), color = "black") +
theme_bw() +
facet_grid(set.type~., scales = "free_y") +
theme(legend.pos = "none") ->
enrich.plot
#ggsave(enrich.plot, file = "enrich.plot.pdf", w = 5, h = 4)
rbind(mutate(machado.datasets.enrch, set.type = "Machado"  ),
mutate(enrichment.sets, set.type = "DEST")) %>%
#filter(analysis_type == "best_model") %>%
#separate(anchor.model, into = c("model", "resolution.mod", "demo.region"), sep = ";" ) %>%
mutate(start=win.start,
end=win.end
) %>%
left_join(final.windows.pos) %>%
ggplot(aes(
x=win.name,
y=(st.pr),
ymin=(st.lci),
ymax=(st.uci),
color = anchor.model,
fill = anchor.model,
)) +
geom_errorbar(size = 0.5, width = 0.25, position=position_dodge(width=0.5)) +
geom_point(size = 2.0, shape = 21, position=position_dodge(width=0.5), color = "black") +
theme_bw() +
facet_grid(set.type~., scales = "free_y") +
theme(legend.pos = "bottom") ->
dir.plot
ggsave(enrich.plot/dir.plot, file = "dir.plot.pdf", w = 3.5, h = 6)
load("FST.geographical.Rdata")
fst.dat.geo.EC
####
fst.dat.geo.EC %>%
filter(Continental_clusters == "1.Europe_W",
SNP.set == "glm.snps") -> EUW.glm
fst.dat.geo.EC %>%
filter(Continental_clusters == "1.Europe_W",
SNP.set == "macthed.controls.Inv") -> EUW.cI
fst.dat.geo.EC %>%
filter(Continental_clusters == "1.Europe_W",
SNP.set == "macthed.controls.noInv") -> EUW.cnoI
kruskal.test(EUW.glm$FST, EUW.cI$FST )
kruskal.test(EUW.glm$FST, EUW.cnoI$FST )
####
fst.dat.geo.EC %>%
filter(Continental_clusters == "3.Europe_E",
SNP.set == "glm.snps") -> EUE.glm
fst.dat.geo.EC %>%
filter(Continental_clusters == "3.Europe_E",
SNP.set == "macthed.controls.Inv") -> EUE.cI
fst.dat.geo.EC %>%
filter(Continental_clusters == "3.Europe_E",
SNP.set == "macthed.controls.noInv") -> EUE.cnoI
kruskal.test(EUE.glm$FST, EUE.cI$FST )
kruskal.test(EUE.glm$FST, EUE.cnoI$FST )
load("FST.geographical.Rdata")
fst.dat.geo.EC %>%
ggplot(aes(
x=Continental_clusters,
y=FST,
color=SNP.set
)) +
geom_boxplot()
setwd("../Fig6")
rm(list = ls())
library(tidyverse)
library(magrittr)
library(data.table)
library(reshape2)
library(foreach)
library(doParallel)
library(SNPRelate)
library(SeqArray)
library(vroom)
library(fastglm)
gff.msp.300 = vroom("gff.msp.300.dat.txt", col_names = F, delim = "\t")
for(i in 1:dim(gff.msp.300)[1] ){
tmp <- gff.msp.300[i,]
tmp.str = str_split(tmp, pattern = "\\|")
isoform = gsub('.+(isoform .).+','\\1',tmp.str[[9]][3])
gff.msp.300$isoform[i] = isoform
}
gff.msp.300$isoform %>% unique()
gff.msp.300 %<>%
mutate(rank = case_when(isoform == "isoform B" ~ -0.001,
isoform == "isoform D" ~ -0.002,
isoform == "isoform E" ~ -0.003,
isoform == "isoform F" ~ -0.004,
isoform == "isoform G" ~ -0.005,
isoform == "isoform H" ~ -0.006,
isoform == "isoform I" ~ -0.007,
isoform == "isoform J" ~ -0.008,
isoform == "isoform K" ~ -0.009,
isoform == "isoform L" ~ -0.010,
isoform == "isoform M" ~ -0.011
))
load("FST.data.fig.Rdata")
ls()
fst.dat.merged.all
fst.dat.merged.all$WS %>% table
fst.dat.merged.all %>%
filter(WS == "W_5000.S_1000")
filter(CHROM == "2L") ->
fst.all.2L
fst.dat.merged.all
fst.dat.merged.all %>% head
fst.dat.merged.all %>%
filter(WS == "W_5000.S_1000")
filter(CHROM == "2L") %>%
filter(BIN_START > 4.96e6 &  BIN_END < 5.35e6 ) %>%
ggplot(aes(
x=(BIN_START+BIN_END)/2,
y=WEIGHTED_FST,
#color = pop,
#linetype = kar
)) +
geom_vline(xintercept = 5192177, color = "red" ) +
geom_hline(yintercept = 0.6, color = "blue", linetype = "dashed" ) +
scale_color_manual(values = colors) +
ylab(expression(paste("Wier and Cockerham ", F[ST] ) )) +
theme_classic() +
xlab("Genomic Position (Mb)") +
geom_line() -> fst.dat.tsp.win
fst.dat.merged.all %>%
filter(WS == "W_5000.S_1000") %>%
filter(CHROM == "2L") %>%
filter(BIN_START > 4.96e6 &  BIN_END < 5.35e6 ) %>%
ggplot(aes(
x=(BIN_START+BIN_END)/2,
y=WEIGHTED_FST,
color = pop,
#linetype = kar
)) +
geom_vline(xintercept = 5192177, color = "red" ) +
geom_hline(yintercept = 0.6, color = "blue", linetype = "dashed" ) +
scale_color_manual(values = colors) +
ylab(expression(paste("Wier and Cockerham ", F[ST] ) )) +
theme_classic() +
xlab("Genomic Position (Mb)") +
geom_line() -> fst.dat.tsp.win
fst.dat.tsp.win
