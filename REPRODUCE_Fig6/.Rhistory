View(pi.inv)
pi.inv <- read.delim("~/Downloads/Pi.CM.W_100000.S_50000.INV.windowed.pi")
library(tidyverse)
pi.inv %>% head
pi.inv
ggplot(aes(
x=(BIN_START+BIN_END)/2,
y=PI
)) +
geom_line() +
geom_vline(xintercept = 7702805) +
geom_vline(xintercept = 7710690)
pi.inv %>%
ggplot(aes(
x=(BIN_START+BIN_END)/2,
y=PI
)) +
geom_line() +
geom_vline(xintercept = 7702805) +
geom_vline(xintercept = 7710690)
pi.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=(BIN_START+BIN_END)/2,
y=PI
)) +
geom_line() +
geom_vline(xintercept = 7702805) +
geom_vline(xintercept = 7710690)
pi.inv <- read.delim("~/Downloads/D.CM.W_100000.S_50000.INV.Tajima.D")
pi.inv
pi.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=(BIN_START+BIN_END)/2,
y=TajimaD
)) +
geom_line() +
geom_vline(xintercept = 7702805) +
geom_vline(xintercept = 7710690)
pi.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=(BIN_START,
pi.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD
)) +
geom_line() +
geom_vline(xintercept = 7702805) +
geom_vline(xintercept = 7710690)
D.inv <- read.delim("~/Downloads/D.CM.W_100000.S_50000.INV.Tajima.D")
D.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD
)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_line(size = 1.2) +
q
D.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_line(size = 1.2)
D.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, lintype = "dashed") +
geom_hline(yintercept = -1, lintype = "dashed") +
geom_line(size = 1.2)
D.inv %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.2)
D.std <- read.delim("~/Downloads/D.CM.W_100000.S_50000.STD.Tajima.D")
D.std %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.2)
D.std %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.2, color = "grey")
D.inv
D.inv <- read.delim("~/Downloads/D.CM.W_100000.S_50000.INV.Tajima.D")
D.std <- read.delim("~/Downloads/D.CM.W_100000.S_50000.STD.Tajima.D")
library(tidyverse)
library(magrittr)
D.inv <- read.delim("~/Downloads/D.CM.W_100000.S_50000.INV.Tajima.D")
D.inv %<>% mutate(set = "inv")
D.std <- read.delim("~/Downloads/D.CM.W_100000.S_50000.STD.Tajima.D")
D.std %<>% mutate(set = "std")
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "red") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_vline(xintercept = 2225744) +
geom_vline(xintercept = 13154180) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "#L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 3336032, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "3L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 3336032, color = "purple") +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
geom_line(size = 1.1)
rbind(D.inv, D.std) %>%
filter(CHROM == "2L") %>%
ggplot(aes(
x=BIN_START,
y=TajimaD,
color = set)) +
geom_vline(xintercept = 7702805, color = "purple") +
geom_vline(xintercept = 2225744) +
geom_vline(xintercept = 13154180) +
geom_hline(yintercept = 0) +
geom_hline(yintercept = 1, linetype = "dashed") +
geom_hline(yintercept = -1, linetype = "dashed") +
theme_bw() +
xlim(7e6,8e6) +
geom_line(size = 1.1)
library(tidyverse)
library(magrittr)
library(data.table)
library(foreach)
root <- paste(base, paste("data3", metric, sep = "."), sep = "/")
root <- paste(base, paste("data3", metric, sep = "."), sep = "/")
library(data.table)
library(tidyverse)
library(magrittr)
library(reshape2)
library(foreach)
## load
choice.dat <- fread("/Users/jcbnunez/Downloads/Final_Project_Fly_Count.tsv")
library(tidyverse)
a = c( rep(6970, 13), rep(317, 2) )
1/mean(1/a)
a = c( rep(25000, 13), rep(2500, 2) )
1/mean(1/a)
a = c( rep(25000, 13), rep(1500, 2) )
1/mean(1/a)
rm(list = ls())
library(tidyverse)
library(magrittr)
library(factoextra)
library(FactoMineR)
library(gtools)
library(patchwork)
library(ggalt)
slice_n
?slice_n
?slice_
slice_
library(vcfR)
library(adegenet)
library(tidyverse)
library(vroom)
slice_mutation_of_interst.stus %>%
filter(loci %in% c(0,2)) %>%
group_by(loci) %>%
slice_head(n=9)
glm.snps$SNP_id[i]
collect.aic %>%
filter(perm == 0 & mods.rank.typ == "year") %>%
#filter(cluster == "5.Cville") %>%
ggplot(aes(
x= mods.rank.diff,
y = (mean.AICd.1),
color = rnp.trsh,
shape = mods.rank.typ
)) +
geom_point() +
geom_smooth(se = F, #method = "lm"
) +
facet_grid(chr~invName.AIC+cluster) ->
plot.aic.Rdiff.y
load("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/4.1.Model_Search.ENVs/4.AIC_enrichment/nasa_power_weather.raw.Rdata")
ls()
power.dt
power.dt %>%
.$sampleId %>% unique()
library(tidyverse)
power.dt %>%
.$sampleId %>% unique()
library(vroo)
qbeta()
library(vroom)
/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/4.1.Model_Search.ENVs/4.AIC_enrichment/pop.clusters.txt
clust <- vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/4.1.Model_Search.ENVs/4.AIC_enrichment/pop.clusters.txt")
clust
left_join(data.frame(sampleId = samps.for.glm),clust )
power.dt %>%
.$sampleId %>% unique() -> samps.for.glm
clust <- vroom("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/4.1.Model_Search.ENVs/4.AIC_enrichment/pop.clusters.txt")
left_join(data.frame(sampleId = samps.for.glm),clust )
left_join(data.frame(sampleId = samps.for.glm),clust ) %>%
group_by(Continental_clusters) %>%
summarise(N = n())
samps.for.glm %>% head
samps.for.glm %>% samps.for.glm[grep("VA", samps.for.glm)]
samps.for.glm[grep("VA", samps.for.glm)]
samps.for.glm[grep("VA", samps.for.glm)] %>% length()
left_join(data.frame(sampleId = samps.for.glm),clust ) %>%
group_by(Continental_clusters) %>%  head
left_join(data.frame(sampleId = samps.for.glm),clust ) %>%
group_by(Continental_clusters) %>%
separate(sampleId, remove = F, into = c("locality", "ETC"), by = 6 )
left_join(data.frame(sampleId = samps.for.glm),clust ) %>%
group_by(Continental_clusters) %>%
separate(sampleId, remove = F, into = c("locality", "ETC"), sep = 6 )
left_join(data.frame(sampleId = samps.for.glm),clust ) %>%
group_by(Continental_clusters) %>%
separate(sampleId, remove = F, into = c("locality", "ETC"), sep = 6 ) %>%
group_by(Continental_clusters, locality) %>%
summarise(N = n())
left_join(data.frame(sampleId = samps.for.glm),clust ) %>%
group_by(Continental_clusters) %>%
separate(sampleId, remove = F, into = c("locality", "ETC"), sep = 6 ) %>%
group_by(Continental_clusters, locality) %>%
group_by(Continental_clusters) %>%
summarise(N = n())
left_join(data.frame(sampleId = samps.for.glm),clust ) %>%
group_by(Continental_clusters) %>%
separate(sampleId, remove = F, into = c("locality", "ETC"), sep = 6 ) %>%
group_by(Continental_clusters, locality) %>%
summarise(N = n()) %>%
group_by(Continental_clusters) %>%
summarise(N = n())
left_join(data.frame(sampleId = samps.for.glm),clust ) %>%
group_by(Continental_clusters) %>%
separate(sampleId, remove = F, into = c("locality", "ETC"), sep = 6 ) %>%
group_by(Continental_clusters, locality) %>%
summarise(N = n()) %>%
group_by(Continental_clusters) %>% tail
setwd("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/REPRODUCE_Fig4")
load("./FST.geographical.Rdata")
fst.dat.geo.EC$SNP.set %>% unique() -> sets
fst.dat.geo.EC
anova(lm(FST~geo.dist, data = fst.dat.geo.EC))
setwd("../REPRODUCE_Fig6/")
library(data.table)
library(tidyverse)
library(foreach)
library(doParallel)
library(corrplot)
library(patchwork)
library(ggrepel)
#install.packages('doParallel', repos='http://cran.us.r-project.org')
#use doParallel package to register multiple cores that can be used to run loops in parallel
registerDoParallel(10)
#setwd("/Users/jcbnunez/Documents/GitHub/Cville-Seasonality-2016-2019/REPRODUCE_Fig6")
#load in data
#broad coenrichment data
load("figuredatajuly.Rdata")
out_count$group.general = gsub("behavior", "B.", out_count$group.general)
out_count$group.general = gsub("stress-resistance", "SR.", out_count$group.general)
out_count$group.general = gsub("life-history", "LH.", out_count$group.general)
out_count$group.general = gsub("morphology", "M.", out_count$group.general)
#add inversion status to chr
out_count$inv = out_count$chr
out_count$inv = gsub("2L", "2L Inversion Models", out_count$inv)
out_count$inv = gsub("2R", "2R Inversion Models", out_count$inv)
out_count$inv = gsub("3L", "3L Inversion Models", out_count$inv)
out_count$inv = gsub("3R", "3R Inversion Models", out_count$inv)
beats = foreach(f = unique(out_count$chr), .combine = "rbind") %do% {
# f = "2L"
tmp = out_count[chr == f]
group.o = foreach(g = unique(out_count$group.general), .combine ="rbind") %do% {
# g = "B."
tmp2 = tmp[group.general == g]
#show threshold permutations have to beat
threshold = tmp2[perm.status == "observed"]$N
beatcount = (tmp2[perm.status == "permutation"][N > threshold])
beatcount = dim(beatcount)[1]
o = data.table(
chr = f,
group.general = g,
beatcount = beatcount
)
o
}
group.o
}
merg.inv.data = merge(out_count, beats, by = c("chr", "group.general"))
#now show number of perms beaten by oversved = 100 - perms beating it
merg.inv.data$beatcount = 100 - merg.inv.data$beatcount
head(out_count)
#try graph again
g1 =  ggplot(data = merg.inv.data[perm.status == "observed"], aes(x = group.general, y = N, label = beatcount)) +
geom_boxplot(width = 0.5, data = merg.inv.data[perm.status == "permutation"],
aes(x=group.general, y = N), outlier.colour = "NA") +
geom_jitter(data = merg.inv.data[perm.status == "permutation"],
aes(x=group.general, y = N), alpha = 0.08, width = .2) +
geom_point(shape = 23,
size = 5,
fill = c("#F8766D", "#7CAE00", "#00B4C4", "magenta4","#F8766D", "#7CAE00", "#00B4C4", "magenta4","#F8766D", "#7CAE00", "#00B4C4", "magenta4","#F8766D", "#7CAE00", "#00B4C4", "magenta4") ) +
facet_grid(cols = vars(inv), scales = "free")+
theme_bw() +
xlab("Phenotypic Categories") +
ylab( "# of Sig. Phenotypes (< 0.05) ")+
theme(
strip.text.x = element_text(size = 12),
strip.text.y = element_text(size = 10),
axis.title=element_text(size=12,face="bold"),
axis.text.x = element_text( size = 12),
axis.text.y = element_text(size = 12, face = "bold")) +
geom_text_repel(nudge_y = 2)
g1
bounds$inv = gsub(FALSE, "Not-Inverted", bounds$inv)
bounds$inv = gsub(TRUE, "Inverted", bounds$inv)
observedata$inv = gsub(FALSE, "Not-Inverted", observedata$inv)
observedata$inv = gsub(TRUE, "Inverted", observedata$inv)
g2 = ggplot() +
geom_point(data = observedata, aes(x = or, y = prop, color = group.general)) +
geom_abline(data = bounds, aes(intercept = mean.lower.prop, slope = 0), color = "black", linetype = "dashed")+
geom_abline(data = bounds, aes(intercept = mean.upper.prop, slope = 0), color = "black", linetype = "dashed")+
geom_vline(data = bounds, aes(xintercept = mean.lower.or), color = "black", linetype = "dashed")+
geom_vline(data = bounds, aes(xintercept = mean.upper.or), color = "black", linetype = "dashed")+
theme_bw()+
xlab("coenrichment between GWAS/GLM") +
ylab(" codirectionality in GWAS/GLM") +
facet_grid(cols = vars(chr),rows = vars(inv)) +
scale_color_manual(values = c("#F8766D", "#7CAE00", "#00B4C4", "magenta4"))  +
scale_x_continuous(breaks = seq(0,3, by = 0.5)) +
theme(
#legend.position = c(0.875, 2.05),
legend.position = "none",
legend.key.size = unit(.4, "cm") ,
legend.text = element_text(size = 8),
axis.text.x = element_text( size = 7, face = "bold"),
)
#B make co.enrichment figure
g2
####Part C- create sliding window figure
#create boundaries of our peaks
final.windows.pos =
data.frame(win.name = c("win_3.1", "win_4.7", "win_5.1", "win_6.1", "win_6.8", "win_9.6" ),
mid = c(3.0, 4.67, 5.15, 6.2, 6.8 , 9.6)
) %>%
mutate(start = (mid-0.2)*1e6 ,
end  = (mid+0.2)*1e6  )
g3 = ggplot() +
#geom_rect(data=outlier_haplowins, aes(xmin=start/1e6, xmax=end/1e6, ymin=-1, ymax=100),fill ="lightgoldenrod1", alpha=.5) +
geom_rect(data = final.windows.pos,
aes(xmin=start/1e6, xmax = end/1e6,
ymin = 0, ymax = 85),
alpha = 0.7, fill = "gold") +
#geom_line(data = dt.window[perm.st == "permutation"],
#           aes(x=I(start/2+end/2)/1e6, y=avg.N), color="black") +
#geom_line(data = dt.window[perm.st == "permutation"],
#           aes(x=I(start/2+end/2)/1e6, y=lowerbound), color="black", linetype = "dashed") +
geom_vline(xintercept = 2225744/1e6) +
geom_vline(xintercept = 13154180/1e6) +
geom_ribbon(data = dt.window[perm.st == "permutation"],
aes(x=I(start/2+end/2)/1e6, ymax= upperbound, ymin = 0), fill="grey", linetype = "solid", alpha = 0.5) +
geom_point(data=dt.window[perm.st == "observed"],
aes(x=I(start/2+end/2)/1e6, y=avg.N, color = sig.v.per), #color="firebrick4",
size = 1.2) +
scale_color_manual(values = c("slateblue4", "violet")) +
theme_bw()+
# ylim(0,25) +
xlab("Position on Chromosome") +
ylab( "# of Co-enriched Phenos")
## how many phenotypes in Msp300
dt.window[perm.st == "observed"] %>%
arrange(-avg.N)
####D- make phenotype effect figure
#reorder peak groups for the facet
groupbysnp$peak = factor(groupbysnp$peak,
levels = c("inv.start", "win_4.6", "win_5.1", "win_6.8", "win_9.5", "inv.stop"))
section = groupbysnp[peak == "win_5.1"][phenotype %in% c(
"ActivityLevel_Standard-BasalActivity_F",
"NegativeGeotaxis_MSB_Treatment_female",
"StartleResponse_standard_female",
"StarvationResistance_standard_male",
"MeanElutionTime_DevelopmentofTolerance_female",
"FreeGlycerolLevels_LowGlucoseDiet_male"
)]
g3
final.windows.pos
dt.window[perm.st == "observed"]
dt.window[perm.st == "observed"] %>% arrange(-avg.N)
## how many phenotypes in Msp300
dt.window[perm.st == "observed"][sig.v.per == "sig"] %>%
arrange(-avg.N)
g3 = ggplot() +
#geom_rect(data=outlier_haplowins, aes(xmin=start/1e6, xmax=end/1e6, ymin=-1, ymax=100),fill ="lightgoldenrod1", alpha=.5) +
geom_rect(data = final.windows.pos,
aes(xmin=start/1e6, xmax = end/1e6,
ymin = 0, ymax = 85),
alpha = 0.7, fill = "gold") +
#geom_line(data = dt.window[perm.st == "permutation"],
#           aes(x=I(start/2+end/2)/1e6, y=avg.N), color="black") +
#geom_line(data = dt.window[perm.st == "permutation"],
#           aes(x=I(start/2+end/2)/1e6, y=lowerbound), color="black", linetype = "dashed") +
geom_vline(xintercept = 2225744/1e6) +
geom_vline(xintercept = 13154180/1e6) +
geom_ribbon(data = dt.window[perm.st == "permutation"],
aes(x=I(start/2+end/2)/1e6, ymax= upperbound, ymin = 0), fill="grey", linetype = "solid", alpha = 0.5) +
geom_point(data=dt.window[perm.st == "observed"],
aes(x=I(start/2+end/2)/1e6, y=avg.N, color = sig.v.per), #color="firebrick4",
size = 1.2) +
geom_vline(xintercept = 850026) +
scale_color_manual(values = c("slateblue4", "violet")) +
theme_bw()+
# ylim(0,25) +
xlab("Position on Chromosome") +
ylab( "# of Co-enriched Phenos")
g3 = ggplot() +
#geom_rect(data=outlier_haplowins, aes(xmin=start/1e6, xmax=end/1e6, ymin=-1, ymax=100),fill ="lightgoldenrod1", alpha=.5) +
geom_rect(data = final.windows.pos,
aes(xmin=start/1e6, xmax = end/1e6,
ymin = 0, ymax = 85),
alpha = 0.7, fill = "gold") +
#geom_line(data = dt.window[perm.st == "permutation"],
#           aes(x=I(start/2+end/2)/1e6, y=avg.N), color="black") +
#geom_line(data = dt.window[perm.st == "permutation"],
#           aes(x=I(start/2+end/2)/1e6, y=lowerbound), color="black", linetype = "dashed") +
geom_vline(xintercept = 2225744/1e6) +
geom_vline(xintercept = 13154180/1e6) +
geom_ribbon(data = dt.window[perm.st == "permutation"],
aes(x=I(start/2+end/2)/1e6, ymax= upperbound, ymin = 0), fill="grey", linetype = "solid", alpha = 0.5) +
geom_point(data=dt.window[perm.st == "observed"],
aes(x=I(start/2+end/2)/1e6, y=avg.N, color = sig.v.per), #color="firebrick4",
size = 1.2) +
geom_vline(xintercept = 850026/1e6) +
scale_color_manual(values = c("slateblue4", "violet")) +
theme_bw()+
# ylim(0,25) +
xlab("Position on Chromosome") +
ylab( "# of Co-enriched Phenos")
g4
g3
